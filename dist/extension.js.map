{"version":3,"file":"extension.js","mappings":"28BAYA,oBAAyBA,GAErB,MAAMC,EAAqBC,EAAOC,SAASC,gBAAgB,sBAAsB,KAC7E,GAAIC,EAEA,YADAH,EAAOI,OAAOC,uBAAuB,sCAIzC,MACMC,EAAK,YAEXC,EAAW,IAAI,UAAUC,OAAO,CAAEC,KAAMH,EAAII,KAH5B,MAIhBP,GAAY,EAEZI,EAASI,GAAG,cAAeC,IAGvB,GAFAZ,EAAOI,OAAOC,uBAAuB,oCAEjCQ,EAAe,CACf,MAAMC,EAAQC,EAAoBF,GAClCD,EAAOI,KAAKC,KAAKC,UAAU,CAAEC,KAAM,WAAYL,UACnD,CAEAF,EAAOD,GAAG,WAAYS,IAClB,MAAMC,EAAOJ,KAAKK,MAAMF,EAAQG,YAChC,GAAkB,eAAdF,EAAKF,MAAyBN,EAAe,CAC7C,MAAMW,EAAWC,EAAKC,KAAKb,EAAeQ,EAAKM,UAExBC,EAAGC,aAAaL,EAAU,UAC1BH,EAAKS,UACxBF,EAAGG,cAAcP,EAAUH,EAAKS,QAAS,QAEzClB,EAAOI,KAAKC,KAAKC,UAAU,CAAEC,KAAM,aAAcQ,SAAUN,EAAKM,SAAUG,QAAST,EAAKS,WAEhG,IACF,IAGNvB,EAASI,GAAG,aAAa,KACrBX,EAAOI,OAAOC,uBAAuB,0BAA0BC,UAAiB,GAClF,IAGA0B,EAAqBhC,EAAOC,SAASC,gBAAgB,sBAAsB+B,UAC7E,GAAI9B,EAEA,YADAH,EAAOI,OAAOC,uBAAuB,4CAIzC,MAAMC,QAAWN,EAAOI,OAAO8B,aAAa,CAAEC,OAAQ,gCAChDzB,QAAaV,EAAOI,OAAO8B,aAAa,CAAEC,OAAQ,0BAEnD7B,GAAOI,GAKZ0B,EAAW,IAAI,UAAU,QAAQ9B,KAAMI,KAEvC0B,EAASzB,GAAG,QAAQ,KAChBX,EAAOI,OAAOC,uBAAuB,4BAA4B,IAGrE+B,EAASzB,GAAG,WAAYS,IACpB,MAAMC,EAAOJ,KAAKK,MAAMF,EAAQG,YAEhC,GAAkB,aAAdF,EAAKF,MAAuBN,EAE5BQ,EAAKP,MAAMuB,SAASC,IAChB,GAAIzB,EAAe,CACf,MAAMW,EAAWC,EAAKC,KAAKb,EAAeyB,EAAKb,MAC/CG,EAAGW,UAAUd,EAAKe,QAAQhB,GAAW,CAAEiB,WAAW,IAClDb,EAAGG,cAAcP,EAAUc,EAAKR,QAAS,OAC7C,MACI9B,EAAOI,OAAOsC,iBAAiB,yEACnC,IAEJ1C,EAAOI,OAAOC,uBAAuB,oCAClC,GAAkB,eAAdgB,EAAKF,MAAyBN,EAAe,CAEpD,MAAMW,EAAWC,EAAKC,KAAKb,EAAeQ,EAAKM,UAC/CC,EAAGG,cAAcP,EAAUH,EAAKS,QAAS,OAC7C,KAGJM,EAASzB,GAAG,SAAUgC,IAClB3C,EAAOI,OAAOC,uBAAuB,UAAUsC,IAAQ,KAjCvD3C,EAAOI,OAAOC,uBAAuB,sBAkCvC,IAGAuC,EAAqB5C,EAAOC,SAASC,gBAAgB,sBAAsB,KACzEK,IACAA,EAASsC,QACTtC,EAAW,KACXJ,GAAY,EACZH,EAAOI,OAAOC,uBAAuB,gCACzC,IAGEyC,EAAsB9C,EAAOC,SAASC,gBAAgB,uBAAuB,KAC3EkC,IACAA,EAASS,QACTT,EAAW,KACXpC,EAAOI,OAAOC,uBAAuB,qBACzC,IAGJQ,EAAgBb,EAAO+C,UAAUC,mBAAmB,IAAIC,IAAIC,OAExDrC,EACAb,EAAO+C,UAAUI,yBAAyBC,IACtC,GAA8B,SAA1BA,EAAEC,SAASJ,IAAIK,QAAqB/C,EAAU,CAC9C,MAAMiB,EAAW4B,EAAEC,SAASJ,IAAIC,OAC1BvB,EAAWF,EAAK8B,SAAS1C,EAAgBW,GACzCM,EAAUsB,EAAEC,SAASG,UAEvBC,GACAC,aAAaD,GAGjBA,EAAcE,YAAW,KACrB/B,EAAGG,cAAcP,EAAUM,EAAS,QAGhCvB,GAAYA,EAASqD,SACrBrD,EAASqD,QAAQvB,SAASwB,IAClBA,EAAOC,aAAe,UAAUC,MAChCF,EAAO7C,KAAKC,KAAKC,UAAU,CAAEC,KAAM,aAAcQ,WAAUG,YAC/D,GAER,GACDkC,EACP,KAGJhE,EAAOI,OAAOsC,iBAAiB,0EAGnC5C,EAAQmE,cAAcC,KAAKnE,EAAoBiC,EAAoBY,EAAoBE,EAC3F,EAiBA,wBACQvC,GACAA,EAASsC,QAETT,GACAA,EAASS,OAEjB,EA9KA,kBACA,YACA,YACA,YAEA,IAGIhC,EAHAN,EAAoC,KACpC6B,EAA6B,KAC7BjC,GAAY,EAEZsD,EAAqC,KACzC,MAAMO,EAAa,IA8InB,SAASjD,EAAoBoD,GACzB,IAAIC,EAAiB,GAWrB,OAVaxC,EAAGyC,YAAYF,GACvB9B,SAASC,IACV,MAAMd,EAAWC,EAAKC,KAAKyC,EAAK7B,GAC1BgC,EAAO1C,EAAG2C,SAAS/C,GACrB8C,GAAQA,EAAKE,cACbJ,EAAUA,EAAQK,OAAO1D,EAAoBS,IAE7C4C,EAAQF,KAAK,CAAEzC,KAAMA,EAAK8B,SAAS1C,EAAgBW,GAAWM,QAASF,EAAGC,aAAaL,EAAU,SACrG,IAEG4C,CACX,C,gBCnKA,MAAMM,EAAY,EAAQ,IAE1BA,EAAUC,sBAAwB,EAAQ,KAC1CD,EAAUlE,OAAS,EAAQ,KAC3BkE,EAAUE,SAAW,EAAQ,KAC7BF,EAAUG,OAAS,EAAQ,KAE3BH,EAAUA,UAAYA,EACtBA,EAAUI,gBAAkBJ,EAAUlE,OAEtCuE,EAAOC,QAAUN,C,gBCVjB,MAAM,aAAEO,GAAiB,EAAQ,KAE3BC,EAAaC,OAAOC,OAAOC,SAwCjC,SAASC,EAAMC,EAAQC,EAAMC,EAAQC,EAAQC,GAC3C,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,IAC1BH,EAAOC,EAASE,GAAKL,EAAOK,GAAKJ,EAAS,EAAJI,EAE1C,CASA,SAASC,EAAQC,EAAQN,GACvB,IAAK,IAAII,EAAI,EAAGA,EAAIE,EAAOH,OAAQC,IACjCE,EAAOF,IAAMJ,EAAS,EAAJI,EAEtB,CAqDA,GATAb,EAAOC,QAAU,CACfP,OA5FF,SAAgBsB,EAAMC,GACpB,GAAoB,IAAhBD,EAAKJ,OAAc,OAAOV,EAC9B,GAAoB,IAAhBc,EAAKJ,OAAc,OAAOI,EAAK,GAEnC,MAAME,EAASd,OAAOe,YAAYF,GAClC,IAAIN,EAAS,EAEb,IAAK,IAAIE,EAAI,EAAGA,EAAIG,EAAKJ,OAAQC,IAAK,CACpC,MAAMO,EAAMJ,EAAKH,GACjBK,EAAOG,IAAID,EAAKT,GAChBA,GAAUS,EAAIR,MAChB,CAEA,OAAID,EAASM,EACJ,IAAId,EAAWe,EAAOH,OAAQG,EAAOI,WAAYX,GAGnDO,CACT,EA2EET,KAAMF,EACNgB,cAtCF,SAAuBH,GACrB,OAAIA,EAAIR,SAAWQ,EAAIL,OAAOS,WACrBJ,EAAIL,OAGNK,EAAIL,OAAOU,MAAML,EAAIE,WAAYF,EAAIE,WAAaF,EAAIR,OAC/D,EAiCEc,SAvBF,SAASA,EAASpF,GAGhB,GAFAoF,EAASC,UAAW,EAEhBvB,OAAOwB,SAAStF,GAAO,OAAOA,EAElC,IAAI8E,EAWJ,OATI9E,aAAgBuF,YAClBT,EAAM,IAAIjB,EAAW7D,GACZuF,YAAYC,OAAOxF,GAC5B8E,EAAM,IAAIjB,EAAW7D,EAAKyE,OAAQzE,EAAKgF,WAAYhF,EAAKkF,aAExDJ,EAAMhB,OAAO2B,KAAKzF,GAClBoF,EAASC,UAAW,GAGfP,CACT,EAOEY,OAAQlB,IAILmB,QAAQC,IAAIC,kBACf,IACE,MAAMC,EAAa,EAAQ,4GAE3BpC,EAAOC,QAAQQ,KAAO,SAAUD,EAAQC,EAAMC,EAAQC,EAAQC,GACxDA,EAAS,GAAIL,EAAMC,EAAQC,EAAMC,EAAQC,EAAQC,GAChDwB,EAAW3B,KAAKD,EAAQC,EAAMC,EAAQC,EAAQC,EACrD,EAEAZ,EAAOC,QAAQ+B,OAAS,SAAUjB,EAAQN,GACpCM,EAAOH,OAAS,GAAIE,EAAQC,EAAQN,GACnC2B,EAAWJ,OAAOjB,EAAQN,EACjC,CACF,CAAE,MAAOpC,GAET,C,UC/HF,MAAMgE,EAAe,CAAC,aAAc,cAAe,aAC7CC,EAA0B,oBAATC,KAEnBD,GAASD,EAAalD,KAAK,QAE/Ba,EAAOC,QAAU,CACfoC,eACAnC,aAAcE,OAAOoC,MAAM,GAC3BC,KAAM,uCACNH,UACAI,qBAAsBrC,OAAO,0BAC7BsC,UAAWtC,OAAO,aAClBuC,YAAavC,OAAO,eACpBwC,WAAYxC,OAAO,aACnByC,KAAM,O,gBCdR,MAAM,qBAAEJ,EAAoB,UAAEC,GAAc,EAAQ,KAE9CI,EAAQ1C,OAAO,SACf2C,EAAQ3C,OAAO,SACf4C,EAAS5C,OAAO,UAChB6C,EAAW7C,OAAO,YAClB8C,EAAU9C,OAAO,WACjB+C,EAAU/C,OAAO,WACjBgD,EAAQhD,OAAO,SACfiD,EAAYjD,OAAO,aAKzB,MAAMkD,EAOJ,WAAAC,CAAYpH,GACVqH,KAAKL,GAAW,KAChBK,KAAKJ,GAASjH,CAChB,CAKA,UAAI8E,GACF,OAAOuC,KAAKL,EACd,CAKA,QAAIhH,GACF,OAAOqH,KAAKJ,EACd,EAGFK,OAAOC,eAAeJ,EAAMK,UAAW,SAAU,CAAEC,YAAY,IAC/DH,OAAOC,eAAeJ,EAAMK,UAAW,OAAQ,CAAEC,YAAY,IAO7D,MAAMC,UAAmBP,EAcvB,WAAAC,CAAYpH,EAAM2H,EAAU,CAAC,GAC3BC,MAAM5H,GAENqH,KAAKV,QAA0BkB,IAAjBF,EAAQG,KAAqB,EAAIH,EAAQG,KACvDT,KAAKN,QAA8Bc,IAAnBF,EAAQI,OAAuB,GAAKJ,EAAQI,OAC5DV,KAAKH,QAAkCW,IAArBF,EAAQK,UAAiCL,EAAQK,QACrE,CAKA,QAAIF,GACF,OAAOT,KAAKV,EACd,CAKA,UAAIoB,GACF,OAAOV,KAAKN,EACd,CAKA,YAAIiB,GACF,OAAOX,KAAKH,EACd,EAGFI,OAAOC,eAAeG,EAAWF,UAAW,OAAQ,CAAEC,YAAY,IAClEH,OAAOC,eAAeG,EAAWF,UAAW,SAAU,CAAEC,YAAY,IACpEH,OAAOC,eAAeG,EAAWF,UAAW,WAAY,CAAEC,YAAY,IAOtE,MAAMQ,UAAmBd,EAUvB,WAAAC,CAAYpH,EAAM2H,EAAU,CAAC,GAC3BC,MAAM5H,GAENqH,KAAKR,QAA4BgB,IAAlBF,EAAQnG,MAAsB,KAAOmG,EAAQnG,MAC5D6F,KAAKP,QAAgCe,IAApBF,EAAQ1H,QAAwB,GAAK0H,EAAQ1H,OAChE,CAKA,SAAIuB,GACF,OAAO6F,KAAKR,EACd,CAKA,WAAI5G,GACF,OAAOoH,KAAKP,EACd,EAGFQ,OAAOC,eAAeU,EAAWT,UAAW,QAAS,CAAEC,YAAY,IACnEH,OAAOC,eAAeU,EAAWT,UAAW,UAAW,CAAEC,YAAY,IAOrE,MAAMS,UAAqBf,EASzB,WAAAC,CAAYpH,EAAM2H,EAAU,CAAC,GAC3BC,MAAM5H,GAENqH,KAAKT,QAA0BiB,IAAjBF,EAAQzH,KAAqB,KAAOyH,EAAQzH,IAC5D,CAKA,QAAIA,GACF,OAAOmH,KAAKT,EACd,EAGFU,OAAOC,eAAeW,EAAaV,UAAW,OAAQ,CAAEC,YAAY,IAQpE,MAAMU,EAAc,CAalB,gBAAAC,CAAiBpI,EAAMqI,EAASV,EAAU,CAAC,GACzC,IAAK,MAAMW,KAAYjB,KAAKkB,UAAUvI,GACpC,IACG2H,EAAQrB,IACTgC,EAAS/B,KAAe8B,IACvBC,EAAShC,GAEV,OAIJ,IAAIkC,EAEJ,GAAa,YAATxI,EACFwI,EAAU,SAAmBtI,EAAMuI,GACjC,MAAMC,EAAQ,IAAIR,EAAa,UAAW,CACxChI,KAAMuI,EAAWvI,EAAOA,EAAKE,aAG/BsI,EAAM1B,GAAWK,KACjBsB,EAAaN,EAAShB,KAAMqB,EAC9B,OACK,GAAa,UAAT1I,EACTwI,EAAU,SAAiBV,EAAM7H,GAC/B,MAAMyI,EAAQ,IAAIhB,EAAW,QAAS,CACpCI,OACAC,OAAQ9H,EAAQG,WAChB4H,SAAUX,KAAKuB,qBAAuBvB,KAAKwB,kBAG7CH,EAAM1B,GAAWK,KACjBsB,EAAaN,EAAShB,KAAMqB,EAC9B,OACK,GAAa,UAAT1I,EACTwI,EAAU,SAAiBhH,GACzB,MAAMkH,EAAQ,IAAIT,EAAW,QAAS,CACpCzG,QACAvB,QAASuB,EAAMvB,UAGjByI,EAAM1B,GAAWK,KACjBsB,EAAaN,EAAShB,KAAMqB,EAC9B,MACK,IAAa,SAAT1I,EAQT,OAPAwI,EAAU,WACR,MAAME,EAAQ,IAAIvB,EAAM,QAExBuB,EAAM1B,GAAWK,KACjBsB,EAAaN,EAAShB,KAAMqB,EAC9B,CAGF,CAEAF,EAAQlC,KAA0BqB,EAAQrB,GAC1CkC,EAAQjC,GAAa8B,EAEjBV,EAAQmB,KACVzB,KAAKyB,KAAK9I,EAAMwI,GAEhBnB,KAAK7H,GAAGQ,EAAMwI,EAElB,EASA,mBAAAO,CAAoB/I,EAAMqI,GACxB,IAAK,MAAMC,KAAYjB,KAAKkB,UAAUvI,GACpC,GAAIsI,EAAS/B,KAAe8B,IAAYC,EAAShC,GAAuB,CACtEe,KAAK2B,eAAehJ,EAAMsI,GAC1B,KACF,CAEJ,GAmBF,SAASK,EAAaL,EAAUW,EAASP,GACf,iBAAbJ,GAAyBA,EAASY,YAC3CZ,EAASY,YAAYC,KAAKb,EAAUI,GAEpCJ,EAASa,KAAKF,EAASP,EAE3B,CAtBA9E,EAAOC,QAAU,CACf6D,aACAO,aACAd,QACAgB,cACAD,e,gBChRF,MAAM,WAAEkB,GAAe,EAAQ,KAY/B,SAASrG,EAAKsG,EAAMC,EAAMC,QACL1B,IAAfwB,EAAKC,GAAqBD,EAAKC,GAAQ,CAACC,GACvCF,EAAKC,GAAMvG,KAAKwG,EACvB,CAyLA3F,EAAOC,QAAU,CAAE2F,OAxBnB,SAAgBC,GACd,OAAOnC,OAAOoC,KAAKD,GAChBE,KAAKC,IACJ,IAAIC,EAAiBJ,EAAWG,GAEhC,OADKE,MAAMC,QAAQF,KAAiBA,EAAiB,CAACA,IAC/CA,EACJF,KAAKK,GACG,CAACJ,GACLtG,OACCgE,OAAOoC,KAAKM,GAAQL,KAAKM,IACvB,IAAIC,EAASF,EAAOC,GAEpB,OADKH,MAAMC,QAAQG,KAASA,EAAS,CAACA,IAC/BA,EACJP,KAAKQ,IAAa,IAANA,EAAaF,EAAI,GAAGA,KAAKE,MACrC5J,KAAK,KAAK,KAGhBA,KAAK,QAETA,KAAK,KAAK,IAEdA,KAAK,KACV,EAE2BJ,MAhL3B,SAAeiK,GACb,MAAMC,EAAS/C,OAAOgD,OAAO,MAC7B,IAIIC,EACAC,EALAR,EAAS1C,OAAOgD,OAAO,MACvBG,GAAe,EACfC,GAAa,EACbC,GAAW,EAGXC,GAAS,EACT9C,GAAQ,EACR+C,GAAO,EACPpG,EAAI,EAER,KAAOA,EAAI2F,EAAO5F,OAAQC,IAGxB,GAFAqD,EAAOsC,EAAOU,WAAWrG,QAEHoD,IAAlB0C,EACF,IAAa,IAATM,GAAmC,IAArBzB,EAAWtB,IACZ,IAAX8C,IAAcA,EAAQnG,QACrB,GACC,IAANA,GACU,KAATqD,GAAoC,IAATA,EAGvB,IAAa,KAATA,GAAoC,KAATA,EAgBpC,MAAM,IAAIiD,YAAY,iCAAiCtG,KAhBM,CAC7D,IAAe,IAAXmG,EACF,MAAM,IAAIG,YAAY,iCAAiCtG,MAG5C,IAAToG,IAAYA,EAAMpG,GACtB,MAAM6E,EAAOc,EAAO/E,MAAMuF,EAAOC,GACpB,KAAT/C,GACF/E,EAAKsH,EAAQf,EAAMU,GACnBA,EAAS1C,OAAOgD,OAAO,OAEvBC,EAAgBjB,EAGlBsB,EAAQC,GAAO,CACjB,CAEA,MAlBe,IAATA,IAAyB,IAAXD,IAAcC,EAAMpG,QAmBnC,QAAkBoD,IAAd2C,EACT,IAAa,IAATK,GAAmC,IAArBzB,EAAWtB,IACZ,IAAX8C,IAAcA,EAAQnG,QACrB,GAAa,KAATqD,GAA0B,IAATA,GACb,IAAT+C,IAAyB,IAAXD,IAAcC,EAAMpG,QACjC,GAAa,KAATqD,GAA0B,KAATA,EAAe,CACzC,IAAe,IAAX8C,EACF,MAAM,IAAIG,YAAY,iCAAiCtG,MAG5C,IAAToG,IAAYA,EAAMpG,GACtB1B,EAAKiH,EAAQI,EAAO/E,MAAMuF,EAAOC,IAAM,GAC1B,KAAT/C,IACF/E,EAAKsH,EAAQE,EAAeP,GAC5BA,EAAS1C,OAAOgD,OAAO,MACvBC,OAAgB1C,GAGlB+C,EAAQC,GAAO,CACjB,KAAO,IAAa,KAAT/C,IAAsC,IAAX8C,IAAyB,IAATC,EAIpD,MAAM,IAAIE,YAAY,iCAAiCtG,KAHvD+F,EAAYJ,EAAO/E,MAAMuF,EAAOnG,GAChCmG,EAAQC,GAAO,CAGjB,MAOA,GAAIH,EAAY,CACd,GAAyB,IAArBtB,EAAWtB,GACb,MAAM,IAAIiD,YAAY,iCAAiCtG,MAE1C,IAAXmG,EAAcA,EAAQnG,EAChBgG,IAAcA,GAAe,GACvCC,GAAa,CACf,MAAO,GAAIC,EACT,GAAyB,IAArBvB,EAAWtB,IACE,IAAX8C,IAAcA,EAAQnG,QACrB,GAAa,KAATqD,IAAsC,IAAX8C,EACpCD,GAAW,EACXE,EAAMpG,MACD,IAAa,KAATqD,EAGT,MAAM,IAAIiD,YAAY,iCAAiCtG,KAFvDiG,GAAa,CAGf,MACK,GAAa,KAAT5C,GAA8C,KAA7BsC,EAAOU,WAAWrG,EAAI,GAChDkG,GAAW,OACN,IAAa,IAATE,GAAmC,IAArBzB,EAAWtB,IACnB,IAAX8C,IAAcA,EAAQnG,QACrB,IAAe,IAAXmG,GAA0B,KAAT9C,GAA0B,IAATA,EAEtC,IAAa,KAATA,GAA0B,KAATA,EAqB1B,MAAM,IAAIiD,YAAY,iCAAiCtG,KArBd,CACzC,IAAe,IAAXmG,EACF,MAAM,IAAIG,YAAY,iCAAiCtG,MAG5C,IAAToG,IAAYA,EAAMpG,GACtB,IAAIuG,EAAQZ,EAAO/E,MAAMuF,EAAOC,GAC5BJ,IACFO,EAAQA,EAAMC,QAAQ,MAAO,IAC7BR,GAAe,GAEjB1H,EAAKiH,EAAQQ,EAAWQ,GACX,KAATlD,IACF/E,EAAKsH,EAAQE,EAAeP,GAC5BA,EAAS1C,OAAOgD,OAAO,MACvBC,OAAgB1C,GAGlB2C,OAAY3C,EACZ+C,EAAQC,GAAO,CACjB,CAEA,MAvBe,IAATA,IAAYA,EAAMpG,GA2B5B,IAAe,IAAXmG,GAAgBD,GAAqB,KAAT7C,GAA0B,IAATA,EAC/C,MAAM,IAAIiD,YAAY,4BAGX,IAATF,IAAYA,EAAMpG,GACtB,MAAMyG,EAAQd,EAAO/E,MAAMuF,EAAOC,GAclC,YAbsBhD,IAAlB0C,EACFxH,EAAKsH,EAAQa,EAAOlB,SAEFnC,IAAd2C,EACFzH,EAAKiH,EAAQkB,GAAO,GAEpBnI,EAAKiH,EAAQQ,EADJC,EACeS,EAAMD,QAAQ,MAAO,IAErBC,GAE1BnI,EAAKsH,EAAQE,EAAeP,IAGvBK,CACT,E,UCvKA,MAAMc,EAAQlH,OAAO,SACfmH,EAAOnH,OAAO,QAmDpBL,EAAOC,QA7CP,MAOE,WAAAuD,CAAYiE,GACVhE,KAAK8D,GAAS,KACZ9D,KAAKiE,UACLjE,KAAK+D,IAAO,EAEd/D,KAAKgE,YAAcA,GAAeE,IAClClE,KAAKmE,KAAO,GACZnE,KAAKiE,QAAU,CACjB,CAQA,GAAAG,CAAIC,GACFrE,KAAKmE,KAAKzI,KAAK2I,GACfrE,KAAK+D,IACP,CAOA,CAACA,KACC,GAAI/D,KAAKiE,UAAYjE,KAAKgE,aAEtBhE,KAAKmE,KAAKhH,OAAQ,CACpB,MAAMkH,EAAMrE,KAAKmE,KAAKG,QAEtBtE,KAAKiE,UACLI,EAAIrE,KAAK8D,GACX,CACF,E,gBCjDF,MAAMS,EAAO,EAAQ,KAEf5F,EAAa,EAAQ,KACrB6F,EAAU,EAAQ,MAClB,YAAErF,GAAgB,EAAQ,KAE1BzC,EAAaC,OAAOC,OAAOC,SAC3B4H,EAAU9H,OAAO2B,KAAK,CAAC,EAAM,EAAM,IAAM,MACzCoG,EAAqB9H,OAAO,sBAC5B+H,EAAe/H,OAAO,gBACtBgI,EAAYhI,OAAO,YACnBiI,EAAWjI,OAAO,WAClB4C,EAAS5C,OAAO,SAStB,IAAIkI,EA+bJ,SAASC,EAAcC,GACrBhF,KAAK6E,GAAUnJ,KAAKsJ,GACpBhF,KAAK2E,IAAiBK,EAAM7H,MAC9B,CAQA,SAAS8H,EAAcD,GACrBhF,KAAK2E,IAAiBK,EAAM7H,OAG1B6C,KAAK0E,GAAoBQ,YAAc,GACvClF,KAAK2E,IAAiB3E,KAAK0E,GAAoBQ,YAE/ClF,KAAK6E,GAAUnJ,KAAKsJ,IAItBhF,KAAKR,GAAU,IAAI2F,WAAW,6BAC9BnF,KAAKR,GAAQiB,KAAO,oCACpBT,KAAKR,GAAQL,GAAe,KAC5Ba,KAAK2B,eAAe,OAAQsD,GAC5BjF,KAAKoF,QACP,CAQA,SAASC,EAAeC,GAKtBtF,KAAK0E,GAAoBa,SAAW,KACpCD,EAAInG,GAAe,KACnBa,KAAK4E,GAAWU,EAClB,CAnDA/I,EAAOC,QAlbP,MAyBE,WAAAuD,CAAYO,EAASkF,EAAUC,GAW7B,GAVAzF,KAAKkF,YAA2B,EAAbO,EACnBzF,KAAK0F,SAAWpF,GAAW,CAAC,EAC5BN,KAAK2F,gBACyBnF,IAA5BR,KAAK0F,SAASE,UAA0B5F,KAAK0F,SAASE,UAAY,KACpE5F,KAAK6F,YAAcL,EACnBxF,KAAK8F,SAAW,KAChB9F,KAAKuF,SAAW,KAEhBvF,KAAK2C,OAAS,MAETmC,EAAa,CAChB,MAAMd,OAC+BxD,IAAnCR,KAAK0F,SAASK,iBACV/F,KAAK0F,SAASK,iBACd,GACNjB,EAAc,IAAIN,EAAQR,EAC5B,CACF,CAKA,wBAAWd,GACT,MAAO,oBACT,CAQA,KAAA8C,GACE,MAAMrD,EAAS,CAAC,EAiBhB,OAfI3C,KAAK0F,SAASO,0BAChBtD,EAAOuD,4BAA6B,GAElClG,KAAK0F,SAASS,0BAChBxD,EAAOyD,4BAA6B,GAElCpG,KAAK0F,SAASW,sBAChB1D,EAAO2D,uBAAyBtG,KAAK0F,SAASW,qBAE5CrG,KAAK0F,SAASa,oBAChB5D,EAAO6D,uBAAyBxG,KAAK0F,SAASa,oBACA,MAArCvG,KAAK0F,SAASa,sBACvB5D,EAAO6D,wBAAyB,GAG3B7D,CACT,CASA,MAAA8D,CAAOjE,GAOL,OANAA,EAAiBxC,KAAK0G,gBAAgBlE,GAEtCxC,KAAK2C,OAAS3C,KAAK6F,UACf7F,KAAK2G,eAAenE,GACpBxC,KAAK4G,eAAepE,GAEjBxC,KAAK2C,MACd,CAOA,OAAAkE,GAME,GALI7G,KAAKuF,WACPvF,KAAKuF,SAASlL,QACd2F,KAAKuF,SAAW,MAGdvF,KAAK8F,SAAU,CACjB,MAAMgB,EAAW9G,KAAK8F,SAASlB,GAE/B5E,KAAK8F,SAASzL,QACd2F,KAAK8F,SAAW,KAEZgB,GACFA,EACE,IAAIC,MACF,gEAIR,CACF,CASA,cAAAJ,CAAe3D,GACb,MAAMgE,EAAOhH,KAAK0F,SACZuB,EAAWjE,EAAOkE,MAAMvE,MAEQ,IAAjCqE,EAAKf,yBACJtD,EAAOuD,4BACRvD,EAAO2D,0BACwB,IAA7BU,EAAKX,qBACiC,iBAA7BW,EAAKX,qBACXW,EAAKX,oBAAsB1D,EAAO2D,yBACH,iBAA7BU,EAAKT,sBACV5D,EAAO6D,0BAQd,IAAKS,EACH,MAAM,IAAIF,MAAM,gDAqBlB,OAlBIC,EAAKf,0BACPgB,EAASf,4BAA6B,GAEpCc,EAAKb,0BACPc,EAASb,4BAA6B,GAEA,iBAA7BY,EAAKX,sBACdY,EAASX,uBAAyBU,EAAKX,qBAED,iBAA7BW,EAAKT,oBACdU,EAAST,uBAAyBQ,EAAKT,qBAEH,IAApCU,EAAST,yBACoB,IAA7BQ,EAAKT,4BAEEU,EAAST,uBAGXS,CACT,CASA,cAAAL,CAAeO,GACb,MAAMxE,EAASwE,EAAS,GAExB,IAC4C,IAA1CnH,KAAK0F,SAASS,yBACdxD,EAAOyD,2BAEP,MAAM,IAAIW,MAAM,qDAGlB,GAAKpE,EAAO6D,wBAIL,IACiC,IAAtCxG,KAAK0F,SAASa,qBACgC,iBAAtCvG,KAAK0F,SAASa,qBACpB5D,EAAO6D,uBAAyBxG,KAAK0F,SAASa,oBAEhD,MAAM,IAAIQ,MACR,gEAT+C,iBAAtC/G,KAAK0F,SAASa,sBACvB5D,EAAO6D,uBAAyBxG,KAAK0F,SAASa,qBAYlD,OAAO5D,CACT,CASA,eAAA+D,CAAgBlE,GAkDd,OAjDAA,EAAe3I,SAAS8I,IACtB1C,OAAOoC,KAAKM,GAAQ9I,SAASuN,IAC3B,IAAIzD,EAAQhB,EAAOyE,GAEnB,GAAIzD,EAAMxG,OAAS,EACjB,MAAM,IAAI4J,MAAM,cAAcK,oCAKhC,GAFAzD,EAAQA,EAAM,GAEF,2BAARyD,GACF,IAAc,IAAVzD,EAAgB,CAClB,MAAM0D,GAAO1D,EACb,IAAK2D,OAAOC,UAAUF,IAAQA,EAAM,GAAKA,EAAM,GAC7C,MAAM,IAAIG,UACR,gCAAgCJ,OAASzD,KAG7CA,EAAQ0D,CACV,MAAO,IAAKrH,KAAK6F,UACf,MAAM,IAAI2B,UACR,gCAAgCJ,OAASzD,UAGxC,GAAY,2BAARyD,EAAkC,CAC3C,MAAMC,GAAO1D,EACb,IAAK2D,OAAOC,UAAUF,IAAQA,EAAM,GAAKA,EAAM,GAC7C,MAAM,IAAIG,UACR,gCAAgCJ,OAASzD,KAG7CA,EAAQ0D,CACV,KAAO,IACG,+BAARD,GACQ,+BAARA,EAQA,MAAM,IAAIL,MAAM,sBAAsBK,MANtC,IAAc,IAAVzD,EACF,MAAM,IAAI6D,UACR,gCAAgCJ,OAASzD,IAK/C,CAEAhB,EAAOyE,GAAOzD,CAAK,GACnB,IAGGnB,CACT,CAUA,UAAAiF,CAAW5O,EAAM6O,EAAKZ,GACpBhC,EAAYV,KAAKuD,IACf3H,KAAK4H,YAAY/O,EAAM6O,GAAK,CAACpC,EAAKuC,KAChCF,IACAb,EAASxB,EAAKuC,EAAO,GACrB,GAEN,CAUA,QAAAC,CAASjP,EAAM6O,EAAKZ,GAClBhC,EAAYV,KAAKuD,IACf3H,KAAK+H,UAAUlP,EAAM6O,GAAK,CAACpC,EAAKuC,KAC9BF,IACAb,EAASxB,EAAKuC,EAAO,GACrB,GAEN,CAUA,WAAAD,CAAY/O,EAAM6O,EAAKZ,GACrB,MAAMkB,EAAWhI,KAAK6F,UAAY,SAAW,SAE7C,IAAK7F,KAAKuF,SAAU,CAClB,MAAM6B,EAAM,GAAGY,oBACTC,EACwB,iBAArBjI,KAAK2C,OAAOyE,GACf7C,EAAK2D,qBACLlI,KAAK2C,OAAOyE,GAElBpH,KAAKuF,SAAWhB,EAAK4D,iBAAiB,IACjCnI,KAAK0F,SAAS0C,mBACjBH,eAEFjI,KAAKuF,SAASb,GAAsB1E,KACpCA,KAAKuF,SAASZ,GAAgB,EAC9B3E,KAAKuF,SAASV,GAAY,GAC1B7E,KAAKuF,SAASpN,GAAG,QAASkN,GAC1BrF,KAAKuF,SAASpN,GAAG,OAAQ8M,EAC3B,CAEAjF,KAAKuF,SAASX,GAAakC,EAE3B9G,KAAKuF,SAAS8C,MAAMxP,GAChB6O,GAAK1H,KAAKuF,SAAS8C,MAAM5D,GAE7BzE,KAAKuF,SAAS+C,OAAM,KAClB,MAAMhD,EAAMtF,KAAKuF,SAAS/F,GAE1B,GAAI8F,EAIF,OAHAtF,KAAKuF,SAASlL,QACd2F,KAAKuF,SAAW,UAChBuB,EAASxB,GAIX,MAAMzM,EAAO8F,EAAW1C,OACtB+D,KAAKuF,SAASV,GACd7E,KAAKuF,SAASZ,IAGZ3E,KAAKuF,SAASgD,eAAeC,YAC/BxI,KAAKuF,SAASlL,QACd2F,KAAKuF,SAAW,OAEhBvF,KAAKuF,SAASZ,GAAgB,EAC9B3E,KAAKuF,SAASV,GAAY,GAEtB6C,GAAO1H,KAAK2C,OAAO,GAAGqF,0BACxBhI,KAAKuF,SAASH,SAIlB0B,EAAS,KAAMjO,EAAK,GAExB,CAUA,SAAAkP,CAAUlP,EAAM6O,EAAKZ,GACnB,MAAMkB,EAAWhI,KAAK6F,UAAY,SAAW,SAE7C,IAAK7F,KAAK8F,SAAU,CAClB,MAAMsB,EAAM,GAAGY,oBACTC,EACwB,iBAArBjI,KAAK2C,OAAOyE,GACf7C,EAAK2D,qBACLlI,KAAK2C,OAAOyE,GAElBpH,KAAK8F,SAAWvB,EAAKkE,iBAAiB,IACjCzI,KAAK0F,SAASgD,mBACjBT,eAGFjI,KAAK8F,SAASnB,GAAgB,EAC9B3E,KAAK8F,SAASjB,GAAY,GAE1B7E,KAAK8F,SAAS3N,GAAG,OAAQ4M,EAC3B,CAEA/E,KAAK8F,SAASlB,GAAakC,EAE3B9G,KAAK8F,SAASuC,MAAMxP,GACpBmH,KAAK8F,SAASwC,MAAM/D,EAAKoE,cAAc,KACrC,IAAK3I,KAAK8F,SAIR,OAGF,IAAIjN,EAAO8F,EAAW1C,OACpB+D,KAAK8F,SAASjB,GACd7E,KAAK8F,SAASnB,IAGZ+C,IACF7O,EAAO,IAAI6D,EAAW7D,EAAKyE,OAAQzE,EAAKgF,WAAYhF,EAAKsE,OAAS,IAOpE6C,KAAK8F,SAASlB,GAAa,KAE3B5E,KAAK8F,SAASnB,GAAgB,EAC9B3E,KAAK8F,SAASjB,GAAY,GAEtB6C,GAAO1H,KAAK2C,OAAO,GAAGqF,0BACxBhI,KAAK8F,SAASV,QAGhB0B,EAAS,KAAMjO,EAAK,GAExB,E,gBCzcF,MAAM,SAAE+P,GAAa,EAAQ,KAEvBC,EAAoB,EAAQ,MAC5B,aACJjK,EAAY,aACZnC,EAAY,YACZ0C,EAAW,WACXC,GACE,EAAQ,MACN,OAAEnD,EAAM,cAAE6B,EAAa,OAAES,GAAW,EAAQ,MAC5C,kBAAEuK,EAAiB,YAAEC,GAAgB,EAAQ,KAE7CrM,EAAaC,OAAOC,OAAOC,SAmrBjCN,EAAOC,QApqBP,cAAuBoM,EAiBrB,WAAA7I,CAAYO,EAAU,CAAC,GACrBC,QAEAP,KAAKgJ,6BACgCxI,IAAnCF,EAAQ2I,wBACJ3I,EAAQ2I,uBAEdjJ,KAAKkJ,YAAc5I,EAAQ6I,YAAcvK,EAAa,GACtDoB,KAAKoJ,YAAc9I,EAAQ8B,YAAc,CAAC,EAC1CpC,KAAK6F,YAAcvF,EAAQkF,SAC3BxF,KAAKkF,YAAmC,EAArB5E,EAAQmF,WAC3BzF,KAAKqJ,sBAAwB/I,EAAQgJ,mBACrCtJ,KAAKZ,QAAcoB,EAEnBR,KAAKuJ,eAAiB,EACtBvJ,KAAKwJ,SAAW,GAEhBxJ,KAAKyJ,aAAc,EACnBzJ,KAAK0J,eAAiB,EACtB1J,KAAKlD,WAAQ0D,EACbR,KAAK2J,YAAc,EACnB3J,KAAK4J,SAAU,EACf5J,KAAK6J,MAAO,EACZ7J,KAAK8J,QAAU,EAEf9J,KAAK+J,oBAAsB,EAC3B/J,KAAKgK,eAAiB,EACtBhK,KAAKiK,WAAa,GAElBjK,KAAKkK,UAAW,EAChBlK,KAAKmK,OAAQ,EACbnK,KAAKoK,OA7DQ,CA8Df,CAUA,MAAAC,CAAOrF,EAAOsF,EAAUC,GACtB,GAAqB,IAAjBvK,KAAK8J,SAzEI,GAyEgB9J,KAAKoK,OAAoB,OAAOG,IAE7DvK,KAAKuJ,gBAAkBvE,EAAM7H,OAC7B6C,KAAKwJ,SAAS9N,KAAKsJ,GACnBhF,KAAKwK,UAAUD,EACjB,CASA,OAAAE,CAAQC,GAGN,GAFA1K,KAAKuJ,gBAAkBmB,EAEnBA,IAAM1K,KAAKwJ,SAAS,GAAGrM,OAAQ,OAAO6C,KAAKwJ,SAASlF,QAExD,GAAIoG,EAAI1K,KAAKwJ,SAAS,GAAGrM,OAAQ,CAC/B,MAAMQ,EAAMqC,KAAKwJ,SAAS,GAO1B,OANAxJ,KAAKwJ,SAAS,GAAK,IAAI9M,EACrBiB,EAAIL,OACJK,EAAIE,WAAa6M,EACjB/M,EAAIR,OAASuN,GAGR,IAAIhO,EAAWiB,EAAIL,OAAQK,EAAIE,WAAY6M,EACpD,CAEA,MAAMC,EAAMhO,OAAOe,YAAYgN,GAE/B,EAAG,CACD,MAAM/M,EAAMqC,KAAKwJ,SAAS,GACpBtM,EAASyN,EAAIxN,OAASuN,EAExBA,GAAK/M,EAAIR,OACXwN,EAAI/M,IAAIoC,KAAKwJ,SAASlF,QAASpH,IAE/ByN,EAAI/M,IAAI,IAAIgN,WAAWjN,EAAIL,OAAQK,EAAIE,WAAY6M,GAAIxN,GACvD8C,KAAKwJ,SAAS,GAAK,IAAI9M,EACrBiB,EAAIL,OACJK,EAAIE,WAAa6M,EACjB/M,EAAIR,OAASuN,IAIjBA,GAAK/M,EAAIR,MACX,OAASuN,EAAI,GAEb,OAAOC,CACT,CAQA,SAAAH,CAAUD,GACRvK,KAAKmK,OAAQ,EAEb,GACE,OAAQnK,KAAKoK,QACX,KAzIS,EA0IPpK,KAAK6K,QAAQN,GACb,MACF,KA3IsB,EA4IpBvK,KAAK8K,mBAAmBP,GACxB,MACF,KA7IsB,EA8IpBvK,KAAK+K,mBAAmBR,GACxB,MACF,KA/IS,EAgJPvK,KAAKgL,UACL,MACF,KAjJS,EAkJPhL,KAAKiL,QAAQV,GACb,MACF,KAnJU,EAoJV,KAnJY,EAqJV,YADAvK,KAAKmK,OAAQ,UAGVnK,KAAKmK,OAETnK,KAAKkK,UAAUK,GACtB,CAQA,OAAAM,CAAQN,GACN,GAAIvK,KAAKuJ,eAAiB,EAExB,YADAvJ,KAAKmK,OAAQ,GAIf,MAAMxM,EAAMqC,KAAKyK,QAAQ,GAEzB,GAAc,GAAT9M,EAAI,GAUP,YADA4M,EARcvK,KAAKkL,YACjB/F,WACA,+BACA,EACA,KACA,8BAOJ,MAAMgG,IAAiC,IAAnBxN,EAAI,IAExB,IAAIwN,GAAenL,KAAKoJ,YAAYP,EAAkB3F,eAAtD,CAiBA,GAJAlD,KAAK6J,OAA2B,KAAnBlM,EAAI,IACjBqC,KAAK8J,QAAmB,GAATnM,EAAI,GACnBqC,KAAK0J,eAA0B,IAAT/L,EAAI,GAEL,IAAjBqC,KAAK8J,QAAkB,CACzB,GAAIqB,EAUF,YADAZ,EARcvK,KAAKkL,YACjB/F,WACA,sBACA,EACA,KACA,4BAOJ,IAAKnF,KAAK2J,YAUR,YADAY,EARcvK,KAAKkL,YACjB/F,WACA,oBACA,EACA,KACA,0BAOJnF,KAAK8J,QAAU9J,KAAK2J,WACtB,MAAO,GAAqB,IAAjB3J,KAAK8J,SAAqC,IAAjB9J,KAAK8J,QAAkB,CACzD,GAAI9J,KAAK2J,YAUP,YADAY,EARcvK,KAAKkL,YACjB/F,WACA,kBAAkBnF,KAAK8J,WACvB,EACA,KACA,0BAOJ9J,KAAKyJ,YAAc0B,CACrB,KAAO,MAAInL,KAAK8J,QAAU,GAAQ9J,KAAK8J,QAAU,IAoD/C,YADAS,EARcvK,KAAKkL,YACjB/F,WACA,kBAAkBnF,KAAK8J,WACvB,EACA,KACA,0BA/CF,IAAK9J,KAAK6J,KAUR,YADAU,EARcvK,KAAKkL,YACjB/F,WACA,mBACA,EACA,KACA,wBAOJ,GAAIgG,EAUF,YADAZ,EARcvK,KAAKkL,YACjB/F,WACA,sBACA,EACA,KACA,4BAOJ,GACEnF,KAAK0J,eAAiB,KACJ,IAAjB1J,KAAK8J,SAA4C,IAAxB9J,KAAK0J,eAW/B,YADAa,EARcvK,KAAKkL,YACjB/F,WACA,0BAA0BnF,KAAK0J,kBAC/B,EACA,KACA,yCAiBN,CAKA,GAHK1J,KAAK6J,MAAS7J,KAAK2J,cAAa3J,KAAK2J,YAAc3J,KAAK8J,SAC7D9J,KAAK4J,UAA8B,KAAnBjM,EAAI,IAEhBqC,KAAK6F,WACP,IAAK7F,KAAK4J,QAUR,YADAW,EARcvK,KAAKkL,YACjB/F,WACA,oBACA,EACA,KACA,8BAMC,GAAInF,KAAK4J,QAUd,YADAW,EARcvK,KAAKkL,YACjB/F,WACA,sBACA,EACA,KACA,2BAOwB,MAAxBnF,KAAK0J,eAAwB1J,KAAKoK,OA9UZ,EA+UO,MAAxBpK,KAAK0J,eAAwB1J,KAAKoK,OA9UjB,EA+UrBpK,KAAKoL,WAAWb,EAvIrB,MAFEA,EARcvK,KAAKkL,YACjB/F,WACA,sBACA,EACA,KACA,2BA6IN,CAQA,kBAAA2F,CAAmBP,GACbvK,KAAKuJ,eAAiB,EACxBvJ,KAAKmK,OAAQ,GAIfnK,KAAK0J,eAAiB1J,KAAKyK,QAAQ,GAAGY,aAAa,GACnDrL,KAAKoL,WAAWb,GAClB,CAQA,kBAAAQ,CAAmBR,GACjB,GAAIvK,KAAKuJ,eAAiB,EAExB,YADAvJ,KAAKmK,OAAQ,GAIf,MAAMxM,EAAMqC,KAAKyK,QAAQ,GACnBpD,EAAM1J,EAAI2N,aAAa,GAMzBjE,EAAMkE,KAAKC,IAAI,EAAG,IAAW,EAS/BjB,EARcvK,KAAKkL,YACjB/F,WACA,0DACA,EACA,KACA,4CAOJnF,KAAK0J,eAAiBrC,EAAMkE,KAAKC,IAAI,EAAG,IAAM7N,EAAI2N,aAAa,GAC/DtL,KAAKoL,WAAWb,GAClB,CAQA,UAAAa,CAAWb,GACLvK,KAAK0J,gBAAkB1J,KAAK8J,QAAU,IACxC9J,KAAK+J,qBAAuB/J,KAAK0J,eAC7B1J,KAAK+J,oBAAsB/J,KAAKkF,aAAelF,KAAKkF,YAAc,GASpEqF,EARcvK,KAAKkL,YACjB/F,WACA,6BACA,EACA,KACA,sCAQFnF,KAAK4J,QAAS5J,KAAKoK,OA5ZV,EA6ZRpK,KAAKoK,OA5ZG,CA6Zf,CAOA,OAAAY,GACMhL,KAAKuJ,eAAiB,EACxBvJ,KAAKmK,OAAQ,GAIfnK,KAAKlD,MAAQkD,KAAKyK,QAAQ,GAC1BzK,KAAKoK,OA3aQ,EA4af,CAQA,OAAAa,CAAQV,GACN,IAAI1R,EAAO4D,EAEX,GAAIuD,KAAK0J,eAAgB,CACvB,GAAI1J,KAAKuJ,eAAiBvJ,KAAK0J,eAE7B,YADA1J,KAAKmK,OAAQ,GAIftR,EAAOmH,KAAKyK,QAAQzK,KAAK0J,gBAGvB1J,KAAK4J,SACJ5J,KAAKlD,MAAM,GAAKkD,KAAKlD,MAAM,GAAKkD,KAAKlD,MAAM,GAAKkD,KAAKlD,MAAM,IAE5DyB,EAAO1F,EAAMmH,KAAKlD,MAEtB,CAEA,GAAIkD,KAAK8J,QAAU,EACjB9J,KAAKyL,eAAe5S,EAAM0R,OAD5B,CAKA,GAAIvK,KAAKyJ,YAGP,OAFAzJ,KAAKoK,OA5cO,OA6cZpK,KAAKyH,WAAW5O,EAAM0R,GAIpB1R,EAAKsE,SAKP6C,KAAKgK,eAAiBhK,KAAK+J,oBAC3B/J,KAAKiK,WAAWvO,KAAK7C,IAGvBmH,KAAK0L,YAAYnB,EAjBjB,CAkBF,CASA,UAAA9C,CAAW5O,EAAM0R,GACWvK,KAAKoJ,YAAYP,EAAkB3F,eAE3CuE,WAAW5O,EAAMmH,KAAK6J,MAAM,CAACvE,EAAK3H,KAClD,GAAI2H,EAAK,OAAOiF,EAAGjF,GAEnB,GAAI3H,EAAIR,OAAQ,CAEd,GADA6C,KAAKgK,gBAAkBrM,EAAIR,OACvB6C,KAAKgK,eAAiBhK,KAAKkF,aAAelF,KAAKkF,YAAc,EAAG,CAClE,MAAM/K,EAAQ6F,KAAKkL,YACjB/F,WACA,6BACA,EACA,KACA,qCAIF,YADAoF,EAAGpQ,EAEL,CAEA6F,KAAKiK,WAAWvO,KAAKiC,EACvB,CAEAqC,KAAK0L,YAAYnB,GAjgBN,IAkgBPvK,KAAKoK,QAAqBpK,KAAKwK,UAAUD,EAAG,GAEpD,CAQA,WAAAmB,CAAYnB,GACV,IAAKvK,KAAK6J,KAER,YADA7J,KAAKoK,OA9gBM,GAkhBb,MAAMuB,EAAgB3L,KAAKgK,eACrB4B,EAAY5L,KAAKiK,WAOvB,GALAjK,KAAK+J,oBAAsB,EAC3B/J,KAAKgK,eAAiB,EACtBhK,KAAK2J,YAAc,EACnB3J,KAAKiK,WAAa,GAEG,IAAjBjK,KAAK8J,QAAe,CACtB,IAAIjR,EAGFA,EADuB,eAArBmH,KAAKkJ,YACAjN,EAAO2P,EAAWD,GACK,gBAArB3L,KAAKkJ,YACPpL,EAAc7B,EAAO2P,EAAWD,IACT,SAArB3L,KAAKkJ,YACP,IAAIpK,KAAK8M,GAETA,EAGL5L,KAAKgJ,yBACPhJ,KAAK6L,KAAK,UAAWhT,GAAM,GAC3BmH,KAAKoK,OAziBI,IA2iBTpK,KAAKoK,OAriBO,EAsiBZ0B,cAAa,KACX9L,KAAK6L,KAAK,UAAWhT,GAAM,GAC3BmH,KAAKoK,OA9iBE,EA+iBPpK,KAAKwK,UAAUD,EAAG,IAGxB,KAAO,CACL,MAAM5M,EAAM1B,EAAO2P,EAAWD,GAE9B,IAAK3L,KAAKqJ,sBAAwBN,EAAYpL,GAAM,CAClD,MAAMxD,EAAQ6F,KAAKkL,YACjBnE,MACA,0BACA,EACA,KACA,uBAIF,YADAwD,EAAGpQ,EAEL,CA3jBY,IA6jBR6F,KAAKoK,QAAwBpK,KAAKgJ,yBACpChJ,KAAK6L,KAAK,UAAWlO,GAAK,GAC1BqC,KAAKoK,OApkBI,IAskBTpK,KAAKoK,OAhkBO,EAikBZ0B,cAAa,KACX9L,KAAK6L,KAAK,UAAWlO,GAAK,GAC1BqC,KAAKoK,OAzkBE,EA0kBPpK,KAAKwK,UAAUD,EAAG,IAGxB,CACF,CASA,cAAAkB,CAAe5S,EAAM0R,GACnB,GAAqB,IAAjBvK,KAAK8J,QAiDL9J,KAAKgJ,yBACPhJ,KAAK6L,KAAsB,IAAjB7L,KAAK8J,QAAmB,OAAS,OAAQjR,GACnDmH,KAAKoK,OA3oBM,IA6oBXpK,KAAKoK,OAvoBS,EAwoBd0B,cAAa,KACX9L,KAAK6L,KAAsB,IAAjB7L,KAAK8J,QAAmB,OAAS,OAAQjR,GACnDmH,KAAKoK,OAhpBI,EAipBTpK,KAAKwK,UAAUD,EAAG,SAzDtB,CACE,GAAoB,IAAhB1R,EAAKsE,OACP6C,KAAKmK,OAAQ,EACbnK,KAAK6L,KAAK,WAAY,KAAMpP,GAC5BuD,KAAKwD,UACA,CACL,MAAM/C,EAAO5H,EAAKwS,aAAa,GAE/B,IAAKvC,EAAkBrI,GAAO,CAC5B,MAAMtG,EAAQ6F,KAAKkL,YACjB/F,WACA,uBAAuB1E,KACvB,EACA,KACA,6BAIF,YADA8J,EAAGpQ,EAEL,CAEA,MAAMwD,EAAM,IAAIjB,EACd7D,EAAKyE,OACLzE,EAAKgF,WAAa,EAClBhF,EAAKsE,OAAS,GAGhB,IAAK6C,KAAKqJ,sBAAwBN,EAAYpL,GAAM,CAClD,MAAMxD,EAAQ6F,KAAKkL,YACjBnE,MACA,0BACA,EACA,KACA,uBAIF,YADAwD,EAAGpQ,EAEL,CAEA6F,KAAKmK,OAAQ,EACbnK,KAAK6L,KAAK,WAAYpL,EAAM9C,GAC5BqC,KAAKwD,KACP,CAEAxD,KAAKoK,OAroBM,CAuoBb,CAaF,CAcA,WAAAc,CAAYa,EAAWnT,EAASoT,EAAQC,EAAYC,GAClDlM,KAAKmK,OAAQ,EACbnK,KAAKkK,UAAW,EAEhB,MAAM5E,EAAM,IAAIyG,EACdC,EAAS,4BAA4BpT,IAAYA,GAMnD,OAHAmO,MAAMoF,kBAAkB7G,EAAKtF,KAAKkL,aAClC5F,EAAI7E,KAAOyL,EACX5G,EAAInG,GAAe8M,EACZ3G,CACT,E,gBC1rBF,MAAM,OAAE8G,GAAW,EAAQ,MACrB,eAAEC,GAAmB,EAAQ,KAE7BxD,EAAoB,EAAQ,MAC5B,aAAEpM,EAAY,WAAE2C,EAAU,KAAEC,GAAS,EAAQ,MAC7C,OAAEiN,EAAM,kBAAExD,GAAsB,EAAQ,MACtC9L,KAAMuP,EAAS,SAAEtO,GAAa,EAAQ,KAExCuO,EAAc5P,OAAO,eACrB6P,EAAa9P,OAAOoC,MAAM,GAC1B2N,EAAmB,KACzB,IAAIC,EACAC,EAAoBF,EASxB,MAAMrQ,EASJ,WAAA0D,CAAY3H,EAAQgK,EAAYyK,GAC9B7M,KAAKoJ,YAAchH,GAAc,CAAC,EAE9ByK,IACF7M,KAAK8M,cAAgBD,EACrB7M,KAAK+M,YAAcpQ,OAAOoC,MAAM,IAGlCiB,KAAKgN,QAAU5U,EAEf4H,KAAKiN,gBAAiB,EACtBjN,KAAK+H,WAAY,EAEjB/H,KAAKuJ,eAAiB,EACtBvJ,KAAKkN,OAAS,GACdlN,KAAKoK,OA/BO,EAgCZpK,KAAKmN,QAAU9N,EACfW,KAAKZ,QAAcoB,CACrB,CAuBA,YAAO4M,CAAMvU,EAAMyH,GACjB,IAAItD,EAmCAqQ,EAlCAC,GAAQ,EACRpQ,EAAS,EACTqQ,GAAc,EAEdjN,EAAQtD,OACVA,EAAOsD,EAAQmM,YAAcA,EAEzBnM,EAAQuM,aACVvM,EAAQuM,aAAa7P,IAEjB4P,IAAsBF,SAELlM,IAAfmM,IAKFA,EAAahQ,OAAOoC,MAAM2N,IAG5BL,EAAeM,EAAY,EAAGD,GAC9BE,EAAoB,GAGtB5P,EAAK,GAAK2P,EAAWC,KACrB5P,EAAK,GAAK2P,EAAWC,KACrB5P,EAAK,GAAK2P,EAAWC,KACrB5P,EAAK,GAAK2P,EAAWC,MAGvBW,IAAevQ,EAAK,GAAKA,EAAK,GAAKA,EAAK,GAAKA,EAAK,IAClDE,EAAS,GAKS,iBAATrE,EAQPwU,EANE/M,EAAQtD,OAAQuQ,QACO/M,IAAzBF,EAAQkM,IAIR3T,EAAO8D,OAAO2B,KAAKzF,IACDsE,OAHLmD,EAAQkM,IAMvBa,EAAaxU,EAAKsE,OAClBmQ,EAAQhN,EAAQtD,MAAQsD,EAAQpC,WAAaqP,GAG/C,IAAIC,EAAgBH,EAEhBA,GAAc,OAChBnQ,GAAU,EACVsQ,EAAgB,KACPH,EAAa,MACtBnQ,GAAU,EACVsQ,EAAgB,KAGlB,MAAM/P,EAASd,OAAOe,YAAY4P,EAAQD,EAAanQ,EAASA,GAchE,OAZAO,EAAO,GAAK6C,EAAQoH,IAAuB,IAAjBpH,EAAQmN,OAAgBnN,EAAQmN,OACtDnN,EAAQoN,OAAMjQ,EAAO,IAAM,IAE/BA,EAAO,GAAK+P,EAEU,MAAlBA,EACF/P,EAAOkQ,cAAcN,EAAY,GACN,MAAlBG,IACT/P,EAAO,GAAKA,EAAO,GAAK,EACxBA,EAAOmQ,YAAYP,EAAY,EAAG,IAG/B/M,EAAQtD,MAEbS,EAAO,IAAM,IACbA,EAAOP,EAAS,GAAKF,EAAK,GAC1BS,EAAOP,EAAS,GAAKF,EAAK,GAC1BS,EAAOP,EAAS,GAAKF,EAAK,GAC1BS,EAAOP,EAAS,GAAKF,EAAK,GAEtBuQ,EAAoB,CAAC9P,EAAQ5E,GAE7ByU,GACFf,EAAU1T,EAAMmE,EAAMS,EAAQP,EAAQmQ,GAC/B,CAAC5P,KAGV8O,EAAU1T,EAAMmE,EAAMnE,EAAM,EAAGwU,GACxB,CAAC5P,EAAQ5E,KAhBU,CAAC4E,EAAQ5E,EAiBrC,CAWA,KAAAwB,CAAMoG,EAAM5H,EAAMmE,EAAMuN,GACtB,IAAI5M,EAEJ,QAAa6C,IAATC,EACF9C,EAAMlB,MACD,IAAoB,iBAATgE,IAAsBqI,EAAkBrI,GACxD,MAAM,IAAI+G,UAAU,oDACf,QAAahH,IAAT3H,GAAuBA,EAAKsE,OAGhC,CACL,MAAMA,EAASR,OAAOoB,WAAWlF,GAEjC,GAAIsE,EAAS,IACX,MAAM,IAAIgI,WAAW,kDAGvBxH,EAAMhB,OAAOe,YAAY,EAAIP,GAC7BQ,EAAIgQ,cAAclN,EAAM,GAEJ,iBAAT5H,EACT8E,EAAI0K,MAAMxP,EAAM,GAEhB8E,EAAIC,IAAI/E,EAAM,EAElB,MAjBE8E,EAAMhB,OAAOe,YAAY,GACzBC,EAAIgQ,cAAclN,EAAM,EAgB1B,CAEA,MAAMH,EAAU,CACd,CAACkM,GAAc7O,EAAIR,OACnBuK,KAAK,EACLmF,aAAc7M,KAAK8M,cACnB9P,OACAyP,WAAYzM,KAAK+M,YACjBU,OAAQ,EACRvP,UAAU,EACVwP,MAAM,GArMI,IAwMR1N,KAAKoK,OACPpK,KAAK6N,QAAQ,CAAC7N,KAAK8N,SAAUnQ,GAAK,EAAO2C,EAASiK,IAElDvK,KAAK+N,UAAU1R,EAAO+Q,MAAMzP,EAAK2C,GAAUiK,EAE/C,CAUA,IAAAyD,CAAKnV,EAAMmE,EAAMuN,GACf,IAAIxM,EACAG,EAcJ,GAZoB,iBAATrF,GACTkF,EAAapB,OAAOoB,WAAWlF,GAC/BqF,GAAW,GACFoO,EAAOzT,IAChBkF,EAAalF,EAAKoV,KAClB/P,GAAW,IAGXH,GADAlF,EAAOoF,EAASpF,IACEsE,OAClBe,EAAWD,EAASC,UAGlBH,EAAa,IACf,MAAM,IAAIoH,WAAW,oDAGvB,MAAM7E,EAAU,CACd,CAACkM,GAAczO,EACf2J,KAAK,EACLmF,aAAc7M,KAAK8M,cACnB9P,OACAyP,WAAYzM,KAAK+M,YACjBU,OAAQ,EACRvP,WACAwP,MAAM,GAGJpB,EAAOzT,GAtPC,IAuPNmH,KAAKoK,OACPpK,KAAK6N,QAAQ,CAAC7N,KAAKkO,YAAarV,GAAM,EAAOyH,EAASiK,IAEtDvK,KAAKkO,YAAYrV,GAAM,EAAOyH,EAASiK,GA1P/B,IA4PDvK,KAAKoK,OACdpK,KAAK6N,QAAQ,CAAC7N,KAAK8N,SAAUjV,GAAM,EAAOyH,EAASiK,IAEnDvK,KAAK+N,UAAU1R,EAAO+Q,MAAMvU,EAAMyH,GAAUiK,EAEhD,CAUA,IAAA4D,CAAKtV,EAAMmE,EAAMuN,GACf,IAAIxM,EACAG,EAcJ,GAZoB,iBAATrF,GACTkF,EAAapB,OAAOoB,WAAWlF,GAC/BqF,GAAW,GACFoO,EAAOzT,IAChBkF,EAAalF,EAAKoV,KAClB/P,GAAW,IAGXH,GADAlF,EAAOoF,EAASpF,IACEsE,OAClBe,EAAWD,EAASC,UAGlBH,EAAa,IACf,MAAM,IAAIoH,WAAW,oDAGvB,MAAM7E,EAAU,CACd,CAACkM,GAAczO,EACf2J,KAAK,EACLmF,aAAc7M,KAAK8M,cACnB9P,OACAyP,WAAYzM,KAAK+M,YACjBU,OAAQ,GACRvP,WACAwP,MAAM,GAGJpB,EAAOzT,GA1SC,IA2SNmH,KAAKoK,OACPpK,KAAK6N,QAAQ,CAAC7N,KAAKkO,YAAarV,GAAM,EAAOyH,EAASiK,IAEtDvK,KAAKkO,YAAYrV,GAAM,EAAOyH,EAASiK,GA9S/B,IAgTDvK,KAAKoK,OACdpK,KAAK6N,QAAQ,CAAC7N,KAAK8N,SAAUjV,GAAM,EAAOyH,EAASiK,IAEnDvK,KAAK+N,UAAU1R,EAAO+Q,MAAMvU,EAAMyH,GAAUiK,EAEhD,CAkBA,IAAA/R,CAAKK,EAAMyH,EAASiK,GAClB,MAAM6D,EAAoBpO,KAAKoJ,YAAYP,EAAkB3F,eAC7D,IAGInF,EACAG,EAJAuP,EAASnN,EAAQ+N,OAAS,EAAI,EAC9BX,EAAOpN,EAAQwH,SAKC,iBAATjP,GACTkF,EAAapB,OAAOoB,WAAWlF,GAC/BqF,GAAW,GACFoO,EAAOzT,IAChBkF,EAAalF,EAAKoV,KAClB/P,GAAW,IAGXH,GADAlF,EAAOoF,EAASpF,IACEsE,OAClBe,EAAWD,EAASC,UAGlB8B,KAAKiN,gBACPjN,KAAKiN,gBAAiB,EAEpBS,GACAU,GACAA,EAAkBzL,OAChByL,EAAkBvI,UACd,6BACA,gCAGN6H,EAAO3P,GAAcqQ,EAAkBzI,YAEzC3F,KAAK+H,UAAY2F,IAEjBA,GAAO,EACPD,EAAS,GAGPnN,EAAQoH,MAAK1H,KAAKiN,gBAAiB,GAEvC,MAAMjG,EAAO,CACX,CAACwF,GAAczO,EACf2J,IAAKpH,EAAQoH,IACbmF,aAAc7M,KAAK8M,cACnB9P,KAAMsD,EAAQtD,KACdyP,WAAYzM,KAAK+M,YACjBU,SACAvP,WACAwP,QAGEpB,EAAOzT,GA3XC,IA4XNmH,KAAKoK,OACPpK,KAAK6N,QAAQ,CAAC7N,KAAKkO,YAAarV,EAAMmH,KAAK+H,UAAWf,EAAMuD,IAE5DvK,KAAKkO,YAAYrV,EAAMmH,KAAK+H,UAAWf,EAAMuD,GA/XrC,IAiYDvK,KAAKoK,OACdpK,KAAK6N,QAAQ,CAAC7N,KAAK8N,SAAUjV,EAAMmH,KAAK+H,UAAWf,EAAMuD,IAEzDvK,KAAK8N,SAASjV,EAAMmH,KAAK+H,UAAWf,EAAMuD,EAE9C,CAyBA,WAAA2D,CAAYI,EAAMxG,EAAUxH,EAASiK,GACnCvK,KAAKuJ,gBAAkBjJ,EAAQkM,GAC/BxM,KAAKoK,OA/Za,EAialBkE,EACGC,cACAC,MAAMD,IACL,GAAIvO,KAAKgN,QAAQyB,UAAW,CAC1B,MAAMnJ,EAAM,IAAIyB,MACd,uDASF,YADAvI,QAAQkQ,SAASC,EAAe3O,KAAMsF,EAAKiF,EAE7C,CAEAvK,KAAKuJ,gBAAkBjJ,EAAQkM,GAC/B,MAAM3T,EAAOoF,EAASsQ,GAEjBzG,EAKH9H,KAAK8N,SAASjV,EAAMiP,EAAUxH,EAASiK,IAJvCvK,KAAKoK,OAxbC,EAybNpK,KAAK+N,UAAU1R,EAAO+Q,MAAMvU,EAAMyH,GAAUiK,GAC5CvK,KAAK4O,UAGP,IAEDC,OAAOvJ,IAKN9G,QAAQkQ,SAASI,EAAS9O,KAAMsF,EAAKiF,EAAG,GAE9C,CAyBA,QAAAuD,CAASjV,EAAMiP,EAAUxH,EAASiK,GAChC,IAAKzC,EAEH,YADA9H,KAAK+N,UAAU1R,EAAO+Q,MAAMvU,EAAMyH,GAAUiK,GAI9C,MAAM6D,EAAoBpO,KAAKoJ,YAAYP,EAAkB3F,eAE7DlD,KAAKuJ,gBAAkBjJ,EAAQkM,GAC/BxM,KAAKoK,OAveS,EAwedgE,EAAkBtG,SAASjP,EAAMyH,EAAQoH,KAAK,CAACqH,EAAGpR,KAC5CqC,KAAKgN,QAAQyB,UAKfE,EAAc3O,KAJF,IAAI+G,MACd,yDAGuBwD,IAI3BvK,KAAKuJ,gBAAkBjJ,EAAQkM,GAC/BxM,KAAKoK,OApfK,EAqfV9J,EAAQpC,UAAW,EACnB8B,KAAK+N,UAAU1R,EAAO+Q,MAAMzP,EAAK2C,GAAUiK,GAC3CvK,KAAK4O,UAAS,GAElB,CAOA,OAAAA,GACE,KAjgBY,IAigBL5O,KAAKoK,QAAsBpK,KAAKkN,OAAO/P,QAAQ,CACpD,MAAMwF,EAAS3C,KAAKkN,OAAO5I,QAE3BtE,KAAKuJ,gBAAkB5G,EAAO,GAAG6J,GACjCwC,QAAQC,MAAMtM,EAAO,GAAI3C,KAAM2C,EAAO3E,MAAM,GAC9C,CACF,CAQA,OAAA6P,CAAQlL,GACN3C,KAAKuJ,gBAAkB5G,EAAO,GAAG6J,GACjCxM,KAAKkN,OAAOxR,KAAKiH,EACnB,CASA,SAAAoL,CAAUxQ,EAAMgN,GACM,IAAhBhN,EAAKJ,QACP6C,KAAKgN,QAAQkC,OACblP,KAAKgN,QAAQ3E,MAAM9K,EAAK,IACxByC,KAAKgN,QAAQ3E,MAAM9K,EAAK,GAAIgN,GAC5BvK,KAAKgN,QAAQmC,UAEbnP,KAAKgN,QAAQ3E,MAAM9K,EAAK,GAAIgN,EAEhC,EAaF,SAASoE,EAAcS,EAAQ9J,EAAKiF,GAChB,mBAAPA,GAAmBA,EAAGjF,GAEjC,IAAK,IAAIlI,EAAI,EAAGA,EAAIgS,EAAOlC,OAAO/P,OAAQC,IAAK,CAC7C,MAAMuF,EAASyM,EAAOlC,OAAO9P,GACvB0J,EAAWnE,EAAOA,EAAOxF,OAAS,GAEhB,mBAAb2J,GAAyBA,EAASxB,EAC/C,CACF,CAUA,SAASwJ,EAAQM,EAAQ9J,EAAKiF,GAC5BoE,EAAcS,EAAQ9J,EAAKiF,GAC3B6E,EAAOjC,QAAQ7H,EACjB,CAhCA/I,EAAOC,QAAUH,C,gBCvjBjB,MAAM,OAAE+P,GAAW,EAAQ,KAQ3B,SAASiD,EAAUC,GACjBA,EAAOzD,KAAK,QACd,CAOA,SAAS0D,KACFvP,KAAKyO,WAAazO,KAAKwP,eAAeC,UACzCzP,KAAK0P,SAET,CAQA,SAASC,EAAcrK,GACrBtF,KAAK2B,eAAe,QAASgO,GAC7B3P,KAAK0P,UAC+B,IAAhC1P,KAAK4P,cAAc,UAErB5P,KAAK6L,KAAK,QAASvG,EAEvB,CAwHA/I,EAAOC,QA9GP,SAA+BqT,EAAIvP,GACjC,IAAIwP,GAAqB,EAEzB,MAAMC,EAAS,IAAI3D,EAAO,IACrB9L,EACH0P,aAAa,EACbX,WAAW,EACXY,YAAY,EACZC,oBAAoB,IAmGtB,OAhGAL,EAAG1X,GAAG,WAAW,SAAiBgY,EAAK/O,GACrC,MAAMvI,GACHuI,GAAY2O,EAAOxH,eAAe0H,WAAaE,EAAIpX,WAAaoX,EAE9DJ,EAAOrU,KAAK7C,IAAOgX,EAAGO,OAC7B,IAEAP,EAAGpO,KAAK,SAAS,SAAe6D,GAC1ByK,EAAOtB,YAWXqB,GAAqB,EACrBC,EAAOL,QAAQpK,GACjB,IAEAuK,EAAGpO,KAAK,SAAS,WACXsO,EAAOtB,WAEXsB,EAAOrU,KAAK,KACd,IAEAqU,EAAOM,SAAW,SAAU/K,EAAKwB,GAC/B,GAAI+I,EAAGvU,aAAeuU,EAAGS,OAGvB,OAFAxJ,EAASxB,QACT9G,QAAQkQ,SAASW,EAAWU,GAI9B,IAAIQ,GAAS,EAEbV,EAAGpO,KAAK,SAAS,SAAe6D,GAC9BiL,GAAS,EACTzJ,EAASxB,EACX,IAEAuK,EAAGpO,KAAK,SAAS,WACV8O,GAAQzJ,EAASxB,GACtB9G,QAAQkQ,SAASW,EAAWU,EAC9B,IAEID,GAAoBD,EAAGW,WAC7B,EAEAT,EAAOU,OAAS,SAAU3J,GACpB+I,EAAGvU,aAAeuU,EAAGa,WAWN,OAAfb,EAAG7C,UAEH6C,EAAG7C,QAAQwC,eAAeC,UAC5B3I,IACIiJ,EAAOxH,eAAeC,YAAYuH,EAAOL,YAE7CG,EAAG7C,QAAQvL,KAAK,UAAU,WAIxBqF,GACF,IACA+I,EAAGxV,UAtBHwV,EAAGpO,KAAK,QAAQ,WACdsO,EAAOU,OAAO3J,EAChB,GAsBJ,EAEAiJ,EAAOY,MAAQ,WACTd,EAAGe,UAAUf,EAAGgB,QACtB,EAEAd,EAAO1F,OAAS,SAAUrF,EAAOsF,EAAUxD,GACrC+I,EAAGvU,aAAeuU,EAAGa,WAOzBb,EAAGrX,KAAKwM,EAAO8B,GANb+I,EAAGpO,KAAK,QAAQ,WACdsO,EAAO1F,OAAOrF,EAAOsF,EAAUxD,EACjC,GAKJ,EAEAiJ,EAAO5X,GAAG,MAAOoX,GACjBQ,EAAO5X,GAAG,QAASwX,GACZI,CACT,C,gBC1JA,MAAM,WAAEhO,GAAe,EAAQ,KA2D/BxF,EAAOC,QAAU,CAAE1D,MAlDnB,SAAeiK,GACb,MAAM+N,EAAY,IAAIC,IACtB,IAAIxN,GAAS,EACTC,GAAO,EACPpG,EAAI,EAER,KAAQA,EAAI2F,EAAO5F,OAAQC,IAAK,CAC9B,MAAMqD,EAAOsC,EAAOU,WAAWrG,GAE/B,IAAa,IAAToG,GAAmC,IAArBzB,EAAWtB,IACZ,IAAX8C,IAAcA,EAAQnG,QACrB,GACC,IAANA,GACU,KAATqD,GAAoC,IAATA,EAGvB,IAAa,KAATA,EAgBT,MAAM,IAAIiD,YAAY,iCAAiCtG,KAhBrB,CAClC,IAAe,IAAXmG,EACF,MAAM,IAAIG,YAAY,iCAAiCtG,MAG5C,IAAToG,IAAYA,EAAMpG,GAEtB,MAAM4T,EAAWjO,EAAO/E,MAAMuF,EAAOC,GAErC,GAAIsN,EAAUG,IAAID,GAChB,MAAM,IAAItN,YAAY,QAAQsN,gCAGhCF,EAAU1M,IAAI4M,GACdzN,EAAQC,GAAO,CACjB,CAEA,MAlBe,IAATA,IAAyB,IAAXD,IAAcC,EAAMpG,EAmB1C,CAEA,IAAe,IAAXmG,IAAyB,IAATC,EAClB,MAAM,IAAIE,YAAY,2BAGxB,MAAMsN,EAAWjO,EAAO/E,MAAMuF,EAAOnG,GAErC,GAAI0T,EAAUG,IAAID,GAChB,MAAM,IAAItN,YAAY,QAAQsN,gCAIhC,OADAF,EAAU1M,IAAI4M,GACPF,CACT,E,gBCzDA,MAAM,OAAEI,GAAW,EAAQ,MAErB,QAAErS,GAAY,EAAQ,KAoD5B,SAASsS,EAAaxT,GACpB,MAAMyT,EAAMzT,EAAIR,OAChB,IAAIC,EAAI,EAER,KAAOA,EAAIgU,GACT,GAAc,IAATzT,EAAIP,GAGF,GAAwB,MAAV,IAATO,EAAIP,IAAqB,CAEnC,GACEA,EAAI,IAAMgU,GACc,MAAV,IAAbzT,EAAIP,EAAI,KACW,MAAV,IAATO,EAAIP,IAEL,OAAO,EAGTA,GAAK,CACP,MAAO,GAAwB,MAAV,IAATO,EAAIP,IAAqB,CAEnC,GACEA,EAAI,GAAKgU,GACe,MAAV,IAAbzT,EAAIP,EAAI,KACe,MAAV,IAAbO,EAAIP,EAAI,KACG,MAAXO,EAAIP,IAAuC,MAAV,IAAbO,EAAIP,EAAI,KACjB,MAAXO,EAAIP,IAAuC,MAAV,IAAbO,EAAIP,EAAI,IAE7B,OAAO,EAGTA,GAAK,CACP,KAAO,IAAwB,MAAV,IAATO,EAAIP,IAgBd,OAAO,EAdP,GACEA,EAAI,GAAKgU,GACe,MAAV,IAAbzT,EAAIP,EAAI,KACe,MAAV,IAAbO,EAAIP,EAAI,KACe,MAAV,IAAbO,EAAIP,EAAI,KACG,MAAXO,EAAIP,IAAuC,MAAV,IAAbO,EAAIP,EAAI,KACjB,MAAXO,EAAIP,IAAeO,EAAIP,EAAI,GAAK,KACjCO,EAAIP,GAAK,IAET,OAAO,EAGTA,GAAK,CAGP,MA1CEA,IA6CJ,OAAO,CACT,CA4BA,GAPAb,EAAOC,QAAU,CACf8P,OAbF,SAAgB3I,GACd,OACE9E,GACiB,iBAAV8E,GACsB,mBAAtBA,EAAM4K,aACS,iBAAf5K,EAAMhL,MACW,mBAAjBgL,EAAM2L,SACkB,SAA9B3L,EAAM/G,OAAOyU,cACkB,SAA9B1N,EAAM/G,OAAOyU,aAEnB,EAIEvI,kBAhGF,SAA2BrI,GACzB,OACGA,GAAQ,KACPA,GAAQ,MACC,OAATA,GACS,OAATA,GACS,OAATA,GACDA,GAAQ,KAAQA,GAAQ,IAE7B,EAwFEsI,YAAaoI,EACbpP,WApHiB,CACjmP,EACF3U,EAAOC,QAAQuM,YAAc,SAAUpL,GACrC,OAAOA,EAAIR,OAAS,GAAKgU,EAAaxT,GAAOuT,EAAOvT,EACtD,OACiC,IAAKa,QAAQC,IAAI6S,qBAClD,IACE,MAAMvI,EAAc,EAAQ,gHAE5BxM,EAAOC,QAAQuM,YAAc,SAAUpL,GACrC,OAAOA,EAAIR,OAAS,GAAKgU,EAAaxT,GAAOoL,EAAYpL,EAC3D,CACF,CAAE,MAAO/C,GAET,C,gBClJF,MAAM2W,EAAe,EAAQ,KACvBC,EAAO,EAAQ,MACf,OAAEpF,GAAW,EAAQ,MACrB,WAAEqF,GAAe,EAAQ,KAEzBlP,EAAY,EAAQ,KACpBsG,EAAoB,EAAQ,KAC5B6I,EAAc,EAAQ,KACtBxV,EAAY,EAAQ,KACpB,KAAE8C,EAAI,WAAEI,GAAe,EAAQ,KAE/BuS,EAAW,wBAocjB,SAAStC,EAAUuC,GACjBA,EAAOxH,OAjcM,EAkcbwH,EAAO/F,KAAK,QACd,CAOA,SAASgG,IACP7R,KAAK0P,SACP,CAWA,SAASoC,EAAe1Z,EAAQqI,EAAM7H,EAASmZ,GAS7CnZ,EAAUA,GAAW4Y,EAAKQ,aAAavR,GACvCsR,EAAU,CACRE,WAAY,QACZ,eAAgB,YAChB,iBAAkBtV,OAAOoB,WAAWnF,MACjCmZ,GAGL3Z,EAAOqJ,KAAK,SAAUrJ,EAAOsX,SAE7BtX,EAAOoL,IACL,YAAY/C,KAAQ+Q,EAAKQ,aAAavR,SACpCR,OAAOoC,KAAK0P,GACTzP,KAAK4P,GAAM,GAAGA,MAAMH,EAAQG,OAC5BhZ,KAAK,QACR,WACAN,EAEN,CAaA,SAASuZ,EAAkCP,EAAQQ,EAAKha,EAAQqI,EAAM7H,GACpE,GAAIgZ,EAAOhC,cAAc,iBAAkB,CACzC,MAAMtK,EAAM,IAAIyB,MAAMnO,GACtBmO,MAAMoF,kBAAkB7G,EAAK6M,GAE7BP,EAAO/F,KAAK,gBAAiBvG,EAAKlN,EAAQga,EAC5C,MACEN,EAAe1Z,EAAQqI,EAAM7H,EAEjC,CApGA2D,EAAOC,QA7ZP,cAA8B+U,EAgC5B,WAAAxR,CAAYO,EAASwG,GAsBnB,GArBAvG,QAsBmB,OApBnBD,EAAU,CACR2I,wBAAwB,EACxBoJ,UAAU,EACV5M,WAAY,UACZ6D,oBAAoB,EACpB8E,mBAAmB,EACnBkE,gBAAiB,KACjBC,gBAAgB,EAChBC,aAAc,KACdC,UAAU,EACVC,QAAS,KACTd,OAAQ,KACR3Z,KAAM,KACNgB,KAAM,KACNf,KAAM,KACNgE,eACGoE,IAIMpI,OAAiBoI,EAAQsR,SAAWtR,EAAQmS,UACpC,MAAhBnS,EAAQpI,OAAiBoI,EAAQsR,QAAUtR,EAAQmS,WACnDnS,EAAQsR,QAAUtR,EAAQmS,SAE3B,MAAM,IAAIjL,UACR,qFAyBJ,GApBoB,MAAhBlH,EAAQpI,MACV8H,KAAK2S,QAAUnB,EAAKoB,cAAa,CAACR,EAAKS,KACrC,MAAMC,EAAOtB,EAAKQ,aAAa,KAE/Ba,EAAIE,UAAU,IAAK,CACjB,iBAAkBD,EAAK3V,OACvB,eAAgB,eAElB0V,EAAIrP,IAAIsP,EAAK,IAEf9S,KAAK2S,QAAQK,OACX1S,EAAQpI,KACRoI,EAAQrI,KACRqI,EAAQoS,QACR5L,IAEOxG,EAAQsR,SACjB5R,KAAK2S,QAAUrS,EAAQsR,QAGrB5R,KAAK2S,QAAS,CAChB,MAAMM,EAAiBjT,KAAK6L,KAAKqH,KAAKlT,KAAM,cAE5CA,KAAKmT,iBAiVX,SAAsBvB,EAAQtP,GAC5B,IAAK,MAAMjB,KAASpB,OAAOoC,KAAKC,GAAMsP,EAAOzZ,GAAGkJ,EAAOiB,EAAIjB,IAE3D,OAAO,WACL,IAAK,MAAMA,KAASpB,OAAOoC,KAAKC,GAC9BsP,EAAOjQ,eAAeN,EAAOiB,EAAIjB,GAErC,CACF,CAzV8B+R,CAAapT,KAAK2S,QAAS,CACjDU,UAAWrT,KAAK6L,KAAKqH,KAAKlT,KAAM,aAChC7F,MAAO6F,KAAK6L,KAAKqH,KAAKlT,KAAM,SAC5BsT,QAAS,CAAClB,EAAKha,EAAQmb,KACrBvT,KAAKwT,cAAcpB,EAAKha,EAAQmb,EAAMN,EAAe,GAG3D,EAEkC,IAA9B3S,EAAQ8N,oBAA4B9N,EAAQ8N,kBAAoB,CAAC,GACjE9N,EAAQiS,iBACVvS,KAAK5E,QAAU,IAAI2V,IACnB/Q,KAAKyT,kBAAmB,GAG1BzT,KAAKM,QAAUA,EACfN,KAAKoK,OAjHO,CAkHd,CAWA,OAAAsJ,GACE,GAAI1T,KAAKM,QAAQmS,SACf,MAAM,IAAI1L,MAAM,8CAGlB,OAAK/G,KAAK2S,QACH3S,KAAK2S,QAAQe,UADM,IAE5B,CASA,KAAArZ,CAAMkQ,GACJ,GA5IW,IA4IPvK,KAAKoK,OAQP,OAPIG,GACFvK,KAAKyB,KAAK,SAAS,KACjB8I,EAAG,IAAIxD,MAAM,6BAA6B,SAI9CvI,QAAQkQ,SAASW,EAAWrP,MAM9B,GAFIuK,GAAIvK,KAAKyB,KAAK,QAAS8I,GAxJf,IA0JRvK,KAAKoK,OAGT,GAFApK,KAAKoK,OA3JO,EA6JRpK,KAAKM,QAAQmS,UAAYzS,KAAKM,QAAQsR,OACpC5R,KAAK2S,UACP3S,KAAKmT,mBACLnT,KAAKmT,iBAAmBnT,KAAK2S,QAAU,MAGrC3S,KAAK5E,SACF4E,KAAK5E,QAAQ6S,KAGhBjO,KAAKyT,kBAAmB,EAG1BjV,QAAQkQ,SAASW,EAAWrP,UAEzB,CACL,MAAM4R,EAAS5R,KAAK2S,QAEpB3S,KAAKmT,mBACLnT,KAAKmT,iBAAmBnT,KAAK2S,QAAU,KAMvCf,EAAOvX,OAAM,KACXgV,EAAUrP,KAAK,GAEnB,CACF,CASA,YAAA2T,CAAavB,GACX,GAAIpS,KAAKM,QAAQrH,KAAM,CACrB,MAAM2a,EAAQxB,EAAIyB,IAAIC,QAAQ,KAG9B,KAF4B,IAAXF,EAAexB,EAAIyB,IAAI7V,MAAM,EAAG4V,GAASxB,EAAIyB,OAE7C7T,KAAKM,QAAQrH,KAAM,OAAO,CAC7C,CAEA,OAAO,CACT,CAWA,aAAAua,CAAcpB,EAAKha,EAAQmb,EAAMhJ,GAC/BnS,EAAOD,GAAG,QAAS0Z,GAEnB,MAAMzK,EAAMgL,EAAIL,QAAQ,qBAClBuB,EAAUlB,EAAIL,QAAQuB,QACtBS,GAAW3B,EAAIL,QAAQ,yBAE7B,GAAmB,QAAfK,EAAI4B,OAGN,YADA7B,EAAkCnS,KAAMoS,EAAKha,EAAQ,IADrC,uBAKlB,QAAgBoI,IAAZ8S,GAAmD,cAA1BA,EAAQW,cAGnC,YADA9B,EAAkCnS,KAAMoS,EAAKha,EAAQ,IADrC,0BAKlB,QAAYoI,IAAR4G,IAAsBuK,EAASuC,KAAK9M,GAGtC,YADA+K,EAAkCnS,KAAMoS,EAAKha,EAAQ,IADrC,+CAKlB,GAAgB,IAAZ2b,GAA6B,KAAZA,EAGnB,YADA5B,EAAkCnS,KAAMoS,EAAKha,EAAQ,IADrC,mDAKlB,IAAK4H,KAAK2T,aAAavB,GAErB,YADAN,EAAe1Z,EAAQ,KAIzB,MAAM+b,EAAuB/B,EAAIL,QAAQ,0BACzC,IAAIjB,EAAY,IAAIC,IAEpB,QAA6BvQ,IAAzB2T,EACF,IACErD,EAAYY,EAAY5Y,MAAMqb,EAChC,CAAE,MAAO7O,GAGP,YADA6M,EAAkCnS,KAAMoS,EAAKha,EAAQ,IADrC,wCAGlB,CAGF,MAAMgc,EAAyBhC,EAAIL,QAAQ,4BACrC3P,EAAa,CAAC,EAEpB,GACEpC,KAAKM,QAAQ8N,wBACc5N,IAA3B4T,EACA,CACA,MAAMhG,EAAoB,IAAIvF,EAC5B7I,KAAKM,QAAQ8N,mBACb,EACApO,KAAKM,QAAQmF,YAGf,IACE,MAAMzC,EAAST,EAAUzJ,MAAMsb,GAE3BpR,EAAO6F,EAAkB3F,iBAC3BkL,EAAkB3H,OAAOzD,EAAO6F,EAAkB3F,gBAClDd,EAAWyG,EAAkB3F,eAAiBkL,EAElD,CAAE,MAAO9I,GAIP,YADA6M,EAAkCnS,KAAMoS,EAAKha,EAAQ,IADnD,0DAGJ,CACF,CAKA,GAAI4H,KAAKM,QAAQkS,aAAc,CAC7B,MAAM6B,EAAO,CACXC,OACElC,EAAIL,QAAuB,IAAZgC,EAAgB,uBAAyB,UAC1DQ,UAAWnC,EAAIha,OAAOoc,aAAcpC,EAAIha,OAAOqc,WAC/CrC,OAGF,GAAyC,IAArCpS,KAAKM,QAAQkS,aAAarV,OAgB5B,YAfA6C,KAAKM,QAAQkS,aAAa6B,GAAM,CAACK,EAAUjU,EAAM7H,EAASmZ,KACxD,IAAK2C,EACH,OAAO5C,EAAe1Z,EAAQqI,GAAQ,IAAK7H,EAASmZ,GAGtD/R,KAAK2U,gBACHvS,EACAgF,EACA0J,EACAsB,EACAha,EACAmb,EACAhJ,EACD,IAKL,IAAKvK,KAAKM,QAAQkS,aAAa6B,GAAO,OAAOvC,EAAe1Z,EAAQ,IACtE,CAEA4H,KAAK2U,gBAAgBvS,EAAYgF,EAAK0J,EAAWsB,EAAKha,EAAQmb,EAAMhJ,EACtE,CAeA,eAAAoK,CAAgBvS,EAAYgF,EAAK0J,EAAWsB,EAAKha,EAAQmb,EAAMhJ,GAI7D,IAAKnS,EAAOwc,WAAaxc,EAAOyc,SAAU,OAAOzc,EAAOsX,UAExD,GAAItX,EAAOgH,GACT,MAAM,IAAI2H,MACR,6GAKJ,GAAI/G,KAAKoK,OAnWG,EAmWe,OAAO0H,EAAe1Z,EAAQ,KAEzD,MAIM2Z,EAAU,CACd,mCACA,qBACA,sBACA,yBARaN,EAAW,QACvBqD,OAAO1N,EAAMpI,GACb+V,OAAO,aASJlF,EAAK,IAAI7P,KAAKM,QAAQpE,UAAU,UAAMsE,EAAWR,KAAKM,SAE5D,GAAIwQ,EAAU7C,KAAM,CAIlB,MAAM+C,EAAWhR,KAAKM,QAAQgS,gBAC1BtS,KAAKM,QAAQgS,gBAAgBxB,EAAWsB,GACxCtB,EAAUjO,SAASmS,OAAOrR,MAE1BqN,IACFe,EAAQrW,KAAK,2BAA2BsV,KACxCnB,EAAGoF,UAAYjE,EAEnB,CAEA,GAAI5O,EAAWyG,EAAkB3F,eAAgB,CAC/C,MAAMP,EAASP,EAAWyG,EAAkB3F,eAAeP,OACrDgB,EAAQpB,EAAUJ,OAAO,CAC7B,CAAC0G,EAAkB3F,eAAgB,CAACP,KAEtCoP,EAAQrW,KAAK,6BAA6BiI,KAC1CkM,EAAGzG,YAAchH,CACnB,CAKApC,KAAK6L,KAAK,UAAWkG,EAASK,GAE9Bha,EAAOiQ,MAAM0J,EAAQ9V,OAAO,QAAQ/C,KAAK,SACzCd,EAAOuJ,eAAe,QAASkQ,GAE/BhC,EAAGqF,UAAU9c,EAAQmb,EAAM,CACzBtK,uBAAwBjJ,KAAKM,QAAQ2I,uBACrCxD,WAAYzF,KAAKM,QAAQmF,WACzB6D,mBAAoBtJ,KAAKM,QAAQgJ,qBAG/BtJ,KAAK5E,UACP4E,KAAK5E,QAAQgJ,IAAIyL,GACjBA,EAAG1X,GAAG,SAAS,KACb6H,KAAK5E,QAAQ+Z,OAAOtF,GAEhB7P,KAAKyT,mBAAqBzT,KAAK5E,QAAQ6S,MACzCzP,QAAQkQ,SAASW,EAAWrP,KAC9B,KAIJuK,EAAGsF,EAAIuC,EACT,E,eChbF,MAAMb,EAAe,EAAQ,KACvB6D,EAAQ,EAAQ,KAChB5D,EAAO,EAAQ,KACf6D,EAAM,EAAQ,KACdC,EAAM,EAAQ,MACd,YAAEC,EAAW,WAAE9D,GAAe,EAAQ,MACtC,OAAErF,EAAM,SAAEoJ,GAAa,EAAQ,MAC/B,IAAEC,GAAQ,EAAQ,IAElB5M,EAAoB,EAAQ,KAC5BzM,EAAW,EAAQ,KACnBC,EAAS,EAAQ,MACjB,OAAEiQ,GAAW,EAAQ,MAErB,aACJ1N,EAAY,aACZnC,EAAY,KACZuC,EAAI,qBACJC,EAAoB,UACpBC,EAAS,YACTC,EAAW,WACXC,EAAU,KACVC,GACE,EAAQ,MAEVyB,aAAa,iBAAEC,EAAgB,oBAAEW,IAC/B,EAAQ,MACN,OAAES,EAAM,MAAErJ,GAAU,EAAQ,MAC5B,SAAEmF,GAAa,EAAQ,KAGvByX,EAAW9Y,OAAO,YAClB+Y,EAAmB,CAAC,EAAG,IACvBC,EAAc,CAAC,aAAc,OAAQ,UAAW,UAChDC,EAAmB,iCAOzB,MAAM3Z,UAAkBqV,EAQtB,WAAAxR,CAAY2T,EAAS5C,EAAWxQ,GAC9BC,QAEAP,KAAKkJ,YAActK,EAAa,GAChCoB,KAAK8V,WAAa,KAClB9V,KAAKuB,qBAAsB,EAC3BvB,KAAKwB,iBAAkB,EACvBxB,KAAK+V,cAAgBtZ,EACrBuD,KAAKgW,YAAc,KACnBhW,KAAKiW,eAAgB,EACrBjW,KAAKoJ,YAAc,CAAC,EACpBpJ,KAAKkW,SAAU,EACflW,KAAKiV,UAAY,GACjBjV,KAAKmW,YAAcja,EAAUwU,WAC7B1Q,KAAKoW,UAAY,KACjBpW,KAAKqW,QAAU,KACfrW,KAAKgN,QAAU,KAEC,OAAZ0G,GACF1T,KAAKsW,gBAAkB,EACvBtW,KAAK6F,WAAY,EACjB7F,KAAKuW,WAAa,OAEA/V,IAAdsQ,EACFA,EAAY,GACFrO,MAAMC,QAAQoO,KACC,iBAAdA,GAAwC,OAAdA,GACnCxQ,EAAUwQ,EACVA,EAAY,IAEZA,EAAY,CAACA,IAIjB0F,EAAaxW,KAAM0T,EAAS5C,EAAWxQ,KAEvCN,KAAKyW,UAAYnW,EAAQ+R,SACzBrS,KAAK6F,WAAY,EAErB,CAQA,cAAIsD,GACF,OAAOnJ,KAAKkJ,WACd,CAEA,cAAIC,CAAWxQ,GACRiG,EAAa8X,SAAS/d,KAE3BqH,KAAKkJ,YAAcvQ,EAKfqH,KAAKoW,YAAWpW,KAAKoW,UAAUlN,YAAcvQ,GACnD,CAKA,kBAAIge,GACF,OAAK3W,KAAKgN,QAEHhN,KAAKgN,QAAQwC,eAAerS,OAAS6C,KAAKqW,QAAQ9M,eAF/BvJ,KAAKsW,eAGjC,CAKA,cAAIlU,GACF,OAAOnC,OAAOoC,KAAKrC,KAAKoJ,aAAalQ,MACvC,CAKA,YAAI0X,GACF,OAAO5Q,KAAKkW,OACd,CAMA,WAAIU,GACF,OAAO,IACT,CAMA,WAAIzJ,GACF,OAAO,IACT,CAMA,UAAI0J,GACF,OAAO,IACT,CAMA,aAAIC,GACF,OAAO,IACT,CAKA,YAAI9F,GACF,OAAOhR,KAAKiV,SACd,CAKA,cAAI3Z,GACF,OAAO0E,KAAKmW,WACd,CAKA,OAAItC,GACF,OAAO7T,KAAK+W,IACd,CAkBA,SAAA7B,CAAU9c,EAAQmb,EAAMjT,GACtB,MAAM0W,EAAW,IAAI5a,EAAS,CAC5B6M,uBAAwB3I,EAAQ2I,uBAChCE,WAAYnJ,KAAKmJ,WACjB/G,WAAYpC,KAAKoJ,YACjB5D,SAAUxF,KAAK6F,UACfJ,WAAYnF,EAAQmF,WACpB6D,mBAAoBhJ,EAAQgJ,qBAGxB8F,EAAS,IAAI/S,EAAOjE,EAAQ4H,KAAKoJ,YAAa9I,EAAQuM,cAE5D7M,KAAKoW,UAAYY,EACjBhX,KAAKqW,QAAUjH,EACfpP,KAAKgN,QAAU5U,EAEf4e,EAAS5X,GAAcY,KACvBoP,EAAOhQ,GAAcY,KACrB5H,EAAOgH,GAAcY,KAErBgX,EAAS7e,GAAG,WAAY8e,GACxBD,EAAS7e,GAAG,QAAS+e,GACrBF,EAAS7e,GAAG,QAASgf,GACrBH,EAAS7e,GAAG,UAAWif,GACvBJ,EAAS7e,GAAG,OAAQkf,GACpBL,EAAS7e,GAAG,OAAQmf,GAEpBlI,EAAOjC,QAAUoK,EAKbnf,EAAO+C,YAAY/C,EAAO+C,WAAW,GACrC/C,EAAOof,YAAYpf,EAAOof,aAE1BjE,EAAKpW,OAAS,GAAG/E,EAAOqf,QAAQlE,GAEpCnb,EAAOD,GAAG,QAASuf,GACnBtf,EAAOD,GAAG,OAAQwf,GAClBvf,EAAOD,GAAG,MAAOyf,GACjBxf,EAAOD,GAAG,QAAS0Z,IAEnB7R,KAAKmW,YAAcja,EAAUX,KAC7ByE,KAAK6L,KAAK,OACZ,CAOA,SAAAwD,GACE,IAAKrP,KAAKgN,QAGR,OAFAhN,KAAKmW,YAAcja,EAAUoU,YAC7BtQ,KAAK6L,KAAK,QAAS7L,KAAK8V,WAAY9V,KAAK+V,eAIvC/V,KAAKoJ,YAAYP,EAAkB3F,gBACrClD,KAAKoJ,YAAYP,EAAkB3F,eAAe2D,UAGpD7G,KAAKoW,UAAUyB,qBACf7X,KAAKmW,YAAcja,EAAUoU,OAC7BtQ,KAAK6L,KAAK,QAAS7L,KAAK8V,WAAY9V,KAAK+V,cAC3C,CAsBA,KAAA1b,CAAMoG,EAAM5H,GACV,GAAImH,KAAK1E,aAAeY,EAAUoU,OAClC,GAAItQ,KAAK1E,aAAeY,EAAUwU,WAM9B1Q,KAAK1E,aAAeY,EAAU4b,SAWlC9X,KAAKmW,YAAcja,EAAU4b,QAC7B9X,KAAKqW,QAAQhc,MAAMoG,EAAM5H,GAAOmH,KAAK6F,WAAYP,IAK3CA,IAEJtF,KAAKwB,iBAAkB,GAGrBxB,KAAKuB,qBACLvB,KAAKoW,UAAU5G,eAAeuI,eAE9B/X,KAAKgN,QAAQxJ,MACf,IAGFwU,EAAchY,OA3BVA,KAAKwB,kBACJxB,KAAKuB,qBAAuBvB,KAAKoW,UAAU5G,eAAeuI,eAE3D/X,KAAKgN,QAAQxJ,UAXjB,CACE,MAAM2M,EAAM,6DACZ2B,EAAe9R,KAAMA,KAAKiY,KAAM9H,EAElC,CAgCF,CAOA,KAAAC,GAEIpQ,KAAK1E,aAAeY,EAAUwU,YAC9B1Q,KAAK1E,aAAeY,EAAUoU,SAKhCtQ,KAAKkW,SAAU,EACflW,KAAKgN,QAAQoD,QACf,CAUA,IAAApC,CAAKnV,EAAMmE,EAAMuN,GACf,GAAIvK,KAAK1E,aAAeY,EAAUwU,WAChC,MAAM,IAAI3J,MAAM,oDAGE,mBAATlO,GACT0R,EAAK1R,EACLA,EAAOmE,OAAOwD,GACW,mBAATxD,IAChBuN,EAAKvN,EACLA,OAAOwD,GAGW,iBAAT3H,IAAmBA,EAAOA,EAAKE,YAEtCiH,KAAK1E,aAAeY,EAAUX,WAKrBiF,IAATxD,IAAoBA,GAAQgD,KAAK6F,WACrC7F,KAAKqW,QAAQrI,KAAKnV,GAAQ4D,EAAcO,EAAMuN,IAL5C2N,EAAelY,KAAMnH,EAAM0R,EAM/B,CAUA,IAAA4D,CAAKtV,EAAMmE,EAAMuN,GACf,GAAIvK,KAAK1E,aAAeY,EAAUwU,WAChC,MAAM,IAAI3J,MAAM,oDAGE,mBAATlO,GACT0R,EAAK1R,EACLA,EAAOmE,OAAOwD,GACW,mBAATxD,IAChBuN,EAAKvN,EACLA,OAAOwD,GAGW,iBAAT3H,IAAmBA,EAAOA,EAAKE,YAEtCiH,KAAK1E,aAAeY,EAAUX,WAKrBiF,IAATxD,IAAoBA,GAAQgD,KAAK6F,WACrC7F,KAAKqW,QAAQlI,KAAKtV,GAAQ4D,EAAcO,EAAMuN,IAL5C2N,EAAelY,KAAMnH,EAAM0R,EAM/B,CAOA,MAAAsG,GAEI7Q,KAAK1E,aAAeY,EAAUwU,YAC9B1Q,KAAK1E,aAAeY,EAAUoU,SAKhCtQ,KAAKkW,SAAU,EACVlW,KAAKoW,UAAU5G,eAAe2I,WAAWnY,KAAKgN,QAAQ6D,SAC7D,CAiBA,IAAArY,CAAKK,EAAMyH,EAASiK,GAClB,GAAIvK,KAAK1E,aAAeY,EAAUwU,WAChC,MAAM,IAAI3J,MAAM,oDAUlB,GAPuB,mBAAZzG,IACTiK,EAAKjK,EACLA,EAAU,CAAC,GAGO,iBAATzH,IAAmBA,EAAOA,EAAKE,YAEtCiH,KAAK1E,aAAeY,EAAUX,KAEhC,YADA2c,EAAelY,KAAMnH,EAAM0R,GAI7B,MAAMvD,EAAO,CACXqH,OAAwB,iBAATxV,EACfmE,MAAOgD,KAAK6F,UACZiC,UAAU,EACVJ,KAAK,KACFpH,GAGAN,KAAKoJ,YAAYP,EAAkB3F,iBACtC8D,EAAKc,UAAW,GAGlB9H,KAAKqW,QAAQ7d,KAAKK,GAAQ4D,EAAcuK,EAAMuD,EAChD,CAOA,SAAAiG,GACE,GAAIxQ,KAAK1E,aAAeY,EAAUoU,OAClC,GAAItQ,KAAK1E,aAAeY,EAAUwU,WAM9B1Q,KAAKgN,UACPhN,KAAKmW,YAAcja,EAAU4b,QAC7B9X,KAAKgN,QAAQ0C,eARf,CACE,MAAMS,EAAM,6DACZ2B,EAAe9R,KAAMA,KAAKiY,KAAM9H,EAElC,CAMF,EA6JF,SAASqG,EAAa4B,EAAW1E,EAAS5C,EAAWxQ,GACnD,MAAM0G,EAAO,CACXiC,wBAAwB,EACxBoJ,UAAU,EACVgG,gBAAiB1C,EAAiB,GAClClQ,WAAY,UACZ6D,oBAAoB,EACpB8E,mBAAmB,EACnBkK,iBAAiB,EACjBC,aAAc,MACXjY,EACHkY,gBAAYhY,EACZiY,cAAUjY,EACVwQ,cAAUxQ,EACVkY,aAASlY,EACTwT,OAAQ,MACR/b,UAAMuI,EACNvH,UAAMuH,EACNtI,UAAMsI,GAKR,GAFA4X,EAAU3B,UAAYzP,EAAKqL,UAEtBsD,EAAiBe,SAAS1P,EAAKqR,iBAClC,MAAM,IAAIlT,WACR,iCAAiC6B,EAAKqR,wCACZ1C,EAAiBzc,KAAK,UAIpD,IAAIyf,EAEJ,GAAIjF,aAAmB+B,EACrBkD,EAAYjF,OAEZ,IACEiF,EAAY,IAAIlD,EAAI/B,EACtB,CAAE,MAAO9Y,GACP,MAAM,IAAI8I,YAAY,gBAAgBgQ,IACxC,CAGyB,UAAvBiF,EAAU3H,SACZ2H,EAAU3H,SAAW,MACW,WAAvB2H,EAAU3H,WACnB2H,EAAU3H,SAAW,QAGvBoH,EAAUrB,KAAO4B,EAAUC,KAE3B,MAAMC,EAAkC,SAAvBF,EAAU3H,SACrB8H,EAAkC,aAAvBH,EAAU3H,SAC3B,IAAI+H,EAYJ,GAV2B,QAAvBJ,EAAU3H,UAAuB6H,GAAaC,EAIvCA,IAAaH,EAAUK,SAChCD,EAAoB,8BACXJ,EAAUM,OACnBF,EAAoB,0CANpBA,EACE,oFAQAA,EAAmB,CACrB,MAAMzT,EAAM,IAAI5B,YAAYqV,GAE5B,GAA6B,IAAzBX,EAAU7B,WACZ,MAAMjR,EAGN,YADA4T,EAAkBd,EAAW9S,EAGjC,CAEA,MAAM6T,EAAcN,EAAW,IAAM,GAC/BzR,EAAMmO,EAAY,IAAIxc,SAAS,UAC/BqgB,EAAUP,EAAWzD,EAAMgE,QAAU5H,EAAK4H,QAC1CC,EAAc,IAAItI,IACxB,IAAI3C,EAgEAgE,EAnCJ,GA3BApL,EAAKsS,iBACHtS,EAAKsS,mBAAqBT,EAAWU,EAAaC,GACpDxS,EAAKmS,YAAcnS,EAAKmS,aAAeA,EACvCnS,EAAK9O,KAAOygB,EAAUzgB,MAAQihB,EAC9BnS,EAAK/O,KAAO0gB,EAAUF,SAASgB,WAAW,KACtCd,EAAUF,SAASza,MAAM,GAAI,GAC7B2a,EAAUF,SACdzR,EAAK+K,QAAU,IACV/K,EAAK+K,QACR,wBAAyB/K,EAAKqR,gBAC9B,oBAAqBjR,EACrB6K,WAAY,UACZyH,QAAS,aAEX1S,EAAK/N,KAAO0f,EAAUK,SAAWL,EAAUgB,OAC3C3S,EAAK0R,QAAU1R,EAAK4S,iBAEhB5S,EAAKoH,oBACPA,EAAoB,IAAIvF,GACK,IAA3B7B,EAAKoH,kBAA6BpH,EAAKoH,kBAAoB,CAAC,GAC5D,EACApH,EAAKvB,YAEPuB,EAAK+K,QAAQ,4BAA8B5P,EAAO,CAChD,CAAC0G,EAAkB3F,eAAgBkL,EAAkBpI,WAGrD8K,EAAU3T,OAAQ,CACpB,IAAK,MAAM6T,KAAYF,EAAW,CAChC,GACsB,iBAAbE,IACN6E,EAAiB3B,KAAKlD,IACvBqI,EAAYpI,IAAID,GAEhB,MAAM,IAAItN,YACR,sDAIJ2V,EAAYjV,IAAI4M,EAClB,CAEAhK,EAAK+K,QAAQ,0BAA4BjB,EAAU5X,KAAK,IAC1D,CAYA,GAXI8N,EAAKsN,SACHtN,EAAKqR,gBAAkB,GACzBrR,EAAK+K,QAAQ,wBAA0B/K,EAAKsN,OAE5CtN,EAAK+K,QAAQ8H,OAAS7S,EAAKsN,SAG3BqE,EAAUmB,UAAYnB,EAAUoB,YAClC/S,EAAKgT,KAAO,GAAGrB,EAAUmB,YAAYnB,EAAUoB,YAG7CjB,EAAU,CACZ,MAAMmB,EAAQjT,EAAK/N,KAAKihB,MAAM,KAE9BlT,EAAKwR,WAAayB,EAAM,GACxBjT,EAAK/N,KAAOghB,EAAM,EACpB,CAIA,GAAIjT,EAAKsR,gBAAiB,CACxB,GAA6B,IAAzBF,EAAU7B,WAAkB,CAC9B6B,EAAU+B,aAAerB,EACzBV,EAAUgC,gBAAkBvB,EAC5BT,EAAUiC,0BAA4BvB,EAClC9R,EAAKwR,WACLG,EAAU1gB,KAEd,MAAM8Z,EAAUzR,GAAWA,EAAQyR,QAQnC,GAFAzR,EAAU,IAAKA,EAASyR,QAAS,CAAC,GAE9BA,EACF,IAAK,MAAO3K,EAAKzD,KAAU1D,OAAOqa,QAAQvI,GACxCzR,EAAQyR,QAAQ3K,EAAI6M,eAAiBtQ,CAG3C,MAAO,GAA4C,IAAxCyU,EAAUxI,cAAc,YAAmB,CACpD,MAAM2K,EAAazB,IACfV,EAAU+B,cACRnT,EAAKwR,aAAeJ,EAAUiC,2BAEhCjC,EAAU+B,cAERxB,EAAU1gB,OAASmgB,EAAUiC,4BAE9BE,GAAenC,EAAUgC,kBAAoBvB,YAKzC7R,EAAK+K,QAAQyI,qBACbxT,EAAK+K,QAAQ0I,OAEfF,UAAmBvT,EAAK+K,QAAQ9Z,KAErC+O,EAAKgT,UAAOxZ,EAEhB,CAOIwG,EAAKgT,OAAS1Z,EAAQyR,QAAQyI,gBAChCla,EAAQyR,QAAQyI,cACd,SAAW7d,OAAO2B,KAAK0I,EAAKgT,MAAMjhB,SAAS,WAG/CqZ,EAAMgG,EAAUH,KAAOmB,EAAQpS,GAE3BoR,EAAU7B,YAUZ6B,EAAUvM,KAAK,WAAYuM,EAAUvE,IAAKzB,EAE9C,MACEA,EAAMgG,EAAUH,KAAOmB,EAAQpS,GAG7BA,EAAK0R,SACPtG,EAAIja,GAAG,WAAW,KAChB2Z,EAAesG,EAAWhG,EAAK,kCAAkC,IAIrEA,EAAIja,GAAG,SAAUmN,IACH,OAAR8M,GAAgBA,EAAIsD,KAExBtD,EAAMgG,EAAUH,KAAO,KACvBiB,EAAkBd,EAAW9S,GAAI,IAGnC8M,EAAIja,GAAG,YAAa0a,IAClB,MAAM6H,EAAW7H,EAAId,QAAQ2I,SACvBzO,EAAa4G,EAAI5G,WAEvB,GACEyO,GACA1T,EAAKsR,iBACLrM,GAAc,KACdA,EAAa,IACb,CACA,KAAMmM,EAAU7B,WAAavP,EAAKuR,aAEhC,YADAzG,EAAesG,EAAWhG,EAAK,8BAMjC,IAAIuI,EAFJvI,EAAIwI,QAIJ,IACED,EAAO,IAAIlF,EAAIiF,EAAUhH,EAC3B,CAAE,MAAO9Y,GACP,MAAM0K,EAAM,IAAI5B,YAAY,gBAAgBgX,KAE5C,YADAxB,EAAkBd,EAAW9S,EAE/B,CAEAkR,EAAa4B,EAAWuC,EAAM7J,EAAWxQ,EAC3C,MAAY8X,EAAUvM,KAAK,sBAAuBuG,EAAKS,IACrDf,EACEsG,EACAhG,EACA,+BAA+BS,EAAI5G,aAEvC,IAGFmG,EAAIja,GAAG,WAAW,CAAC0a,EAAKza,EAAQmb,KAO9B,GANA6E,EAAUvM,KAAK,UAAWgH,GAMtBuF,EAAU9c,aAAeY,EAAUwU,WAAY,OAEnD0B,EAAMgG,EAAUH,KAAO,KAEvB,MAAM3E,EAAUT,EAAId,QAAQuB,QAE5B,QAAgB9S,IAAZ8S,GAAmD,cAA1BA,EAAQW,cAEnC,YADAnC,EAAesG,EAAWhgB,EAAQ,0BAIpC,MAAM2c,EAAStD,EAAW,QACvBqD,OAAO1N,EAAMpI,GACb+V,OAAO,UAEV,GAAIlC,EAAId,QAAQ,0BAA4BgD,EAE1C,YADAjD,EAAesG,EAAWhgB,EAAQ,uCAIpC,MAAMyiB,EAAahI,EAAId,QAAQ,0BAC/B,IAAI+I,EAYJ,QAVmBta,IAAfqa,EACGxB,EAAYpL,KAELoL,EAAYpI,IAAI4J,KAC1BC,EAAY,sCAFZA,EAAY,mDAILzB,EAAYpL,OACrB6M,EAAY,8BAGVA,EAEF,YADAhJ,EAAesG,EAAWhgB,EAAQ0iB,GAIhCD,IAAYzC,EAAUnD,UAAY4F,GAEtC,MAAMzG,EAAyBvB,EAAId,QAAQ,4BAE3C,QAA+BvR,IAA3B4T,EAAsC,CACxC,IAAKhG,EAKH,YADA0D,EAAesG,EAAWhgB,EAFxB,gFAMJ,IAAIgK,EAEJ,IACEA,EAAatJ,EAAMsb,EACrB,CAAE,MAAO9O,GAGP,YADAwM,EAAesG,EAAWhgB,EADV,0CAGlB,CAEA,MAAM2iB,EAAiB9a,OAAOoC,KAAKD,GAEnC,GAC4B,IAA1B2Y,EAAe5d,QACf4d,EAAe,KAAOlS,EAAkB3F,cAIxC,YADA4O,EAAesG,EAAWhgB,EADV,wDAKlB,IACEgW,EAAkB3H,OAAOrE,EAAWyG,EAAkB3F,eACxD,CAAE,MAAOoC,GAGP,YADAwM,EAAesG,EAAWhgB,EADV,0CAGlB,CAEAggB,EAAUhP,YAAYP,EAAkB3F,eACtCkL,CACJ,CAEAgK,EAAUlD,UAAU9c,EAAQmb,EAAM,CAChCtK,uBAAwBjC,EAAKiC,uBAC7B4D,aAAc7F,EAAK6F,aACnBpH,WAAYuB,EAAKvB,WACjB6D,mBAAoBtC,EAAKsC,oBACzB,IAGAtC,EAAKgU,cACPhU,EAAKgU,cAAc5I,EAAKgG,GAExBhG,EAAI5O,KAER,CASA,SAAS0V,EAAkBd,EAAW9S,GACpC8S,EAAUjC,YAAcja,EAAU4b,QAKlCM,EAAUnC,eAAgB,EAC1BmC,EAAUvM,KAAK,QAASvG,GACxB8S,EAAU/I,WACZ,CASA,SAASmK,EAAWlZ,GAElB,OADAA,EAAQrH,KAAOqH,EAAQkY,WAChBnD,EAAI4F,QAAQ3a,EACrB,CASA,SAASiZ,EAAWjZ,GAOlB,OANAA,EAAQrH,UAAOuH,EAEVF,EAAQ4a,YAAqC,KAAvB5a,EAAQ4a,aACjC5a,EAAQ4a,WAAa7F,EAAI8F,KAAK7a,EAAQrI,MAAQ,GAAKqI,EAAQrI,MAGtDqd,EAAI2F,QAAQ3a,EACrB,CAWA,SAASwR,EAAesG,EAAW9I,EAAQ1W,GACzCwf,EAAUjC,YAAcja,EAAU4b,QAElC,MAAMxS,EAAM,IAAIyB,MAAMnO,GACtBmO,MAAMoF,kBAAkB7G,EAAKwM,GAEzBxC,EAAO8L,WACT9L,EAAOoG,IAAY,EACnBpG,EAAOsL,QAEHtL,EAAOlX,SAAWkX,EAAOlX,OAAOqW,WAMlCa,EAAOlX,OAAOsX,UAGhBlR,QAAQkQ,SAASwK,EAAmBd,EAAW9S,KAE/CgK,EAAOI,QAAQpK,GACfgK,EAAO7N,KAAK,QAAS2W,EAAUvM,KAAKqH,KAAKkF,EAAW,UACpD9I,EAAO7N,KAAK,QAAS2W,EAAU/I,UAAU6D,KAAKkF,IAElD,CAWA,SAASF,EAAeE,EAAWvf,EAAM0R,GACvC,GAAI1R,EAAM,CACR,MAAMsE,EAASmP,EAAOzT,GAAQA,EAAKoV,KAAOhQ,EAASpF,GAAMsE,OAQrDib,EAAUpL,QAASoL,EAAU/B,QAAQ9M,gBAAkBpM,EACtDib,EAAU9B,iBAAmBnZ,CACpC,CAEA,GAAIoN,EAAI,CACN,MAAMjF,EAAM,IAAIyB,MACd,qCAAqCqR,EAAU9c,eACzCsa,EAAYwC,EAAU9c,gBAE9BkD,QAAQkQ,SAASnE,EAAIjF,EACvB,CACF,CASA,SAAS2R,EAAmBxW,EAAMC,GAChC,MAAM0X,EAAYpY,KAAKZ,GAEvBgZ,EAAU7W,qBAAsB,EAChC6W,EAAUrC,cAAgBrV,EAC1B0X,EAAUtC,WAAarV,OAEeD,IAAlC4X,EAAUpL,QAAQ5N,KAEtBgZ,EAAUpL,QAAQrL,eAAe,OAAQgW,GACzCnZ,QAAQkQ,SAASmC,EAAQuH,EAAUpL,SAEtB,OAATvM,EAAe2X,EAAU/d,QACxB+d,EAAU/d,MAAMoG,EAAMC,GAC7B,CAOA,SAASwW,IACP,MAAMkB,EAAYpY,KAAKZ,GAElBgZ,EAAUxH,UAAUwH,EAAUpL,QAAQ6D,QAC7C,CAQA,SAASsG,EAAgB7R,GACvB,MAAM8S,EAAYpY,KAAKZ,QAEeoB,IAAlC4X,EAAUpL,QAAQ5N,KACpBgZ,EAAUpL,QAAQrL,eAAe,OAAQgW,GAMzCnZ,QAAQkQ,SAASmC,EAAQuH,EAAUpL,SAEnCoL,EAAU/d,MAAMiL,EAAInG,KAGjBiZ,EAAUnC,gBACbmC,EAAUnC,eAAgB,EAC1BmC,EAAUvM,KAAK,QAASvG,GAE5B,CAOA,SAAS+V,IACPrb,KAAKZ,GAAYiQ,WACnB,CASA,SAAS+H,EAAkBve,EAAMuI,GAC/BpB,KAAKZ,GAAYyM,KAAK,UAAWhT,EAAMuI,EACzC,CAQA,SAASiW,EAAexe,GACtB,MAAMuf,EAAYpY,KAAKZ,GAEnBgZ,EAAU3B,WAAW2B,EAAUjK,KAAKtV,GAAOmH,KAAK6F,UAAWxG,GAC/D+Y,EAAUvM,KAAK,OAAQhT,EACzB,CAQA,SAASye,EAAeze,GACtBmH,KAAKZ,GAAYyM,KAAK,OAAQhT,EAChC,CAQA,SAASgY,EAAOvB,GACdA,EAAOuB,QACT,CAQA,SAAS0G,EAAcjS,GACrB,MAAM8S,EAAYpY,KAAKZ,GAEnBgZ,EAAU9c,aAAeY,EAAUoU,SACnC8H,EAAU9c,aAAeY,EAAUX,OACrC6c,EAAUjC,YAAcja,EAAU4b,QAClCE,EAAcI,IAQhBpY,KAAKgN,QAAQxJ,MAER4U,EAAUnC,gBACbmC,EAAUnC,eAAgB,EAC1BmC,EAAUvM,KAAK,QAASvG,IAE5B,CAQA,SAAS0S,EAAcI,GACrBA,EAAUpC,YAAc7a,WACtBid,EAAUpL,QAAQ0C,QAAQwD,KAAKkF,EAAUpL,SAzuCxB,IA4uCrB,CAOA,SAAS0K,IACP,MAAMU,EAAYpY,KAAKZ,GAQvB,IAAI4F,EANJhF,KAAK2B,eAAe,QAAS+V,GAC7B1X,KAAK2B,eAAe,OAAQgW,GAC5B3X,KAAK2B,eAAe,MAAOiW,GAE3BQ,EAAUjC,YAAcja,EAAU4b,QAc/B9X,KAAKuI,eAAeC,YACpB4P,EAAU7W,qBACV6W,EAAUhC,UAAU5G,eAAeuI,cACG,QAAtC/S,EAAQoT,EAAUpL,QAAQsO,SAE3BlD,EAAUhC,UAAU/N,MAAMrD,GAG5BoT,EAAUhC,UAAU5S,MAEpBxD,KAAKZ,QAAcoB,EAEnBtF,aAAakd,EAAUpC,aAGrBoC,EAAUhC,UAAU5G,eAAeC,UACnC2I,EAAUhC,UAAU5G,eAAeuI,aAEnCK,EAAU/I,aAEV+I,EAAUhC,UAAUje,GAAG,QAASkjB,GAChCjD,EAAUhC,UAAUje,GAAG,SAAUkjB,GAErC,CAQA,SAAS1D,EAAa3S,GACfhF,KAAKZ,GAAYgX,UAAU/N,MAAMrD,IACpChF,KAAKoQ,OAET,CAOA,SAASwH,IACP,MAAMQ,EAAYpY,KAAKZ,GAEvBgZ,EAAUjC,YAAcja,EAAU4b,QAClCM,EAAUhC,UAAU5S,MACpBxD,KAAKwD,KACP,CAOA,SAASqO,KACP,MAAMuG,EAAYpY,KAAKZ,GAEvBY,KAAK2B,eAAe,QAASkQ,IAC7B7R,KAAK7H,GAAG,QAASkH,GAEb+Y,IACFA,EAAUjC,YAAcja,EAAU4b,QAClC9X,KAAK0P,UAET,CAp3BAzP,OAAOC,eAAehE,EAAW,aAAc,CAC7CkE,YAAY,EACZuD,MAAOiS,EAAY9B,QAAQ,gBAO7B7T,OAAOC,eAAehE,EAAUiE,UAAW,aAAc,CACvDC,YAAY,EACZuD,MAAOiS,EAAY9B,QAAQ,gBAO7B7T,OAAOC,eAAehE,EAAW,OAAQ,CACvCkE,YAAY,EACZuD,MAAOiS,EAAY9B,QAAQ,UAO7B7T,OAAOC,eAAehE,EAAUiE,UAAW,OAAQ,CACjDC,YAAY,EACZuD,MAAOiS,EAAY9B,QAAQ,UAO7B7T,OAAOC,eAAehE,EAAW,UAAW,CAC1CkE,YAAY,EACZuD,MAAOiS,EAAY9B,QAAQ,aAO7B7T,OAAOC,eAAehE,EAAUiE,UAAW,UAAW,CACpDC,YAAY,EACZuD,MAAOiS,EAAY9B,QAAQ,aAO7B7T,OAAOC,eAAehE,EAAW,SAAU,CACzCkE,YAAY,EACZuD,MAAOiS,EAAY9B,QAAQ,YAO7B7T,OAAOC,eAAehE,EAAUiE,UAAW,SAAU,CACnDC,YAAY,EACZuD,MAAOiS,EAAY9B,QAAQ,YAG7B,CACE,aACA,iBACA,aACA,WACA,WACA,aACA,OACAja,SAAS0hB,IACTtb,OAAOC,eAAehE,EAAUiE,UAAWob,EAAU,CAAEnb,YAAY,GAAO,IAO5E,CAAC,OAAQ,QAAS,QAAS,WAAWvG,SAASma,IAC7C/T,OAAOC,eAAehE,EAAUiE,UAAW,KAAK6T,IAAU,CACxD5T,YAAY,EACZ,GAAAob,GACE,IAAK,MAAMva,KAAYjB,KAAKkB,UAAU8S,GACpC,GAAI/S,EAAShC,GAAuB,OAAOgC,EAAS/B,GAGtD,OAAO,IACT,EACA,GAAAtB,CAAIoD,GACF,IAAK,MAAMC,KAAYjB,KAAKkB,UAAU8S,GACpC,GAAI/S,EAAShC,GAAuB,CAClCe,KAAK2B,eAAeqS,EAAQ/S,GAC5B,KACF,CAGqB,mBAAZD,GAEXhB,KAAKe,iBAAiBiT,EAAQhT,EAAS,CACrC,CAAC/B,IAAuB,GAE5B,GACA,IAGJ/C,EAAUiE,UAAUY,iBAAmBA,EACvC7E,EAAUiE,UAAUuB,oBAAsBA,EAE1CnF,EAAOC,QAAUN,C,UCzmBjBK,EAAOC,QAAUif,QAAQ,S,UCAzBlf,EAAOC,QAAUif,QAAQ,S,UCAzBlf,EAAOC,QAAUif,QAAQ,S,UCAzBlf,EAAOC,QAAUif,QAAQ,S,UCAzBlf,EAAOC,QAAUif,QAAQ,K,UCAzBlf,EAAOC,QAAUif,QAAQ,O,UCAzBlf,EAAOC,QAAUif,QAAQ,Q,UCAzBlf,EAAOC,QAAUif,QAAQ,M,UCAzBlf,EAAOC,QAAUif,QAAQ,O,UCAzBlf,EAAOC,QAAUif,QAAQ,S,UCAzBlf,EAAOC,QAAUif,QAAQ,M,SCAzBlf,EAAOC,QAAUif,QAAQ,M,UCAzBlf,EAAOC,QAAUif,QAAQ,O,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBrb,IAAjBsb,EACH,OAAOA,EAAatf,QAGrB,IAAID,EAASmf,EAAyBG,GAAY,CAGjDrf,QAAS,CAAC,GAOX,OAHAuf,EAAoBF,GAAU/Z,KAAKvF,EAAOC,QAASD,EAAQA,EAAOC,QAASof,GAGpErf,EAAOC,OACf,CCnB0Bof,CAAoB,K","sources":["webpack://colliv/./src/extension.ts","webpack://colliv/./node_modules/ws/index.js","webpack://colliv/./node_modules/ws/lib/buffer-util.js","webpack://colliv/./node_modules/ws/lib/constants.js","webpack://colliv/./node_modules/ws/lib/event-target.js","webpack://colliv/./node_modules/ws/lib/extension.js","webpack://colliv/./node_modules/ws/lib/limiter.js","webpack://colliv/./node_modules/ws/lib/permessage-deflate.js","webpack://colliv/./node_modules/ws/lib/receiver.js","webpack://colliv/./node_modules/ws/lib/sender.js","webpack://colliv/./node_modules/ws/lib/stream.js","webpack://colliv/./node_modules/ws/lib/subprotocol.js","webpack://colliv/./node_modules/ws/lib/validation.js","webpack://colliv/./node_modules/ws/lib/websocket-server.js","webpack://colliv/./node_modules/ws/lib/websocket.js","webpack://colliv/external commonjs \"vscode\"","webpack://colliv/external node-commonjs \"buffer\"","webpack://colliv/external node-commonjs \"crypto\"","webpack://colliv/external node-commonjs \"events\"","webpack://colliv/external node-commonjs \"fs\"","webpack://colliv/external node-commonjs \"http\"","webpack://colliv/external node-commonjs \"https\"","webpack://colliv/external node-commonjs \"net\"","webpack://colliv/external node-commonjs \"path\"","webpack://colliv/external node-commonjs \"stream\"","webpack://colliv/external node-commonjs \"tls\"","webpack://colliv/external node-commonjs \"url\"","webpack://colliv/external node-commonjs \"zlib\"","webpack://colliv/webpack/bootstrap","webpack://colliv/webpack/startup"],"sourcesContent":["import * as vscode from 'vscode';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport WebSocket from 'ws';\n\nlet wsServer: WebSocket.Server | null = null;\nlet wsClient: WebSocket | null = null;\nlet isHosting = false;\nlet workspacePath: string | undefined;\nlet saveTimeout: NodeJS.Timeout | null = null;\nconst SAVE_DELAY = 100;\n\nexport function activate(context: vscode.ExtensionContext) {\n\n    const startServerCommand = vscode.commands.registerCommand('colliv.startServer', () => {\n        if (isHosting) {\n            vscode.window.showInformationMessage('You are already hosting a session.');\n            return;\n        }\n\n        const portNum = 5000;\n        const ip = '127.0.0.1';\n\n        wsServer = new WebSocket.Server({ host: ip, port: portNum });\n        isHosting = true;\n\n        wsServer.on('connection', (socket) => {\n            vscode.window.showInformationMessage('A client has joined the session.');\n\n            if (workspacePath) {\n                const files = getFilesRecursively(workspacePath);\n                socket.send(JSON.stringify({ type: 'fileSync', files }));\n            }\n\n            socket.on('message', (message) => {\n                const data = JSON.parse(message.toString());\n                if (data.type === 'fileUpdate' && workspacePath) {\n                    const filePath = path.join(workspacePath, data.fileName);\n\n                    const currentContent = fs.readFileSync(filePath, 'utf8');\n                    if (currentContent !== data.content) {\n                        fs.writeFileSync(filePath, data.content, 'utf8');\n                        // After writing to file, send updated content to the client\n                        socket.send(JSON.stringify({ type: 'fileUpdate', fileName: data.fileName, content: data.content }));\n                    }\n                }\n            });\n        });\n\n        wsServer.on('listening', () => {\n            vscode.window.showInformationMessage(`Server running on ws://${ip}:${portNum}.`);\n        });\n    });\n\n    const joinSessionCommand = vscode.commands.registerCommand('colliv.joinSession', async () => {\n        if (isHosting) {\n            vscode.window.showInformationMessage('You cannot join a session while hosting.');\n            return;\n        }\n\n        const ip = await vscode.window.showInputBox({ prompt: 'Enter the server IP to join' });\n        const port = await vscode.window.showInputBox({ prompt: 'Enter the server port' });\n\n        if (!ip || !port) {\n            vscode.window.showInformationMessage('Invalid IP or port.');\n            return;\n        }\n\n        wsClient = new WebSocket(`ws://${ip}:${port}`);\n\n        wsClient.on('open', () => {\n            vscode.window.showInformationMessage('Connected to the session!');\n        });\n\n        wsClient.on('message', (message) => {\n            const data = JSON.parse(message.toString());\n\n            if (data.type === 'fileSync' && workspacePath) {\n\n                data.files.forEach((file: any) => {\n                    if (workspacePath) {\n                        const filePath = path.join(workspacePath, file.path);\n                        fs.mkdirSync(path.dirname(filePath), { recursive: true });\n                        fs.writeFileSync(filePath, file.content, 'utf8');\n                    } else {\n                        vscode.window.showErrorMessage('Workspace path is not defined. Please open a folder in your workspace.');\n                    }\n                });\n                vscode.window.showInformationMessage('Files synced from the host!');\n            } else if (data.type === 'fileUpdate' && workspacePath) {\n\n                const filePath = path.join(workspacePath, data.fileName);\n                fs.writeFileSync(filePath, data.content, 'utf8');\n            }\n        });\n\n        wsClient.on('error', (error) => {\n            vscode.window.showInformationMessage(`Error: ${error}`);\n        });\n    });\n\n    const stopSessionCommand = vscode.commands.registerCommand('colliv.stopSession', () => {\n        if (wsServer) {\n            wsServer.close();\n            wsServer = null;\n            isHosting = false;\n            vscode.window.showInformationMessage('Stopped hosting the session.');\n        }\n    });\n\n    const leaveSessionCommand = vscode.commands.registerCommand('colliv.leaveSession', () => {\n        if (wsClient) {\n            wsClient.close();\n            wsClient = null;\n            vscode.window.showInformationMessage('Left the session.');\n        }\n    });\n\n    workspacePath = vscode.workspace.workspaceFolders?.[0]?.uri.fsPath;\n\n    if (workspacePath) {\n        vscode.workspace.onDidChangeTextDocument((e) => {\n            if (e.document.uri.scheme === 'file' && wsServer) {\n                const filePath = e.document.uri.fsPath;\n                const fileName = path.relative(workspacePath!, filePath); \n                const content = e.document.getText();\n\n                if (saveTimeout) {\n                    clearTimeout(saveTimeout);\n                }\n\n                saveTimeout = setTimeout(() => {\n                    fs.writeFileSync(filePath, content, 'utf8');\n\n                    // Check if wsServer is not null\n                    if (wsServer && wsServer.clients) {\n                        wsServer.clients.forEach((client) => {\n                            if (client.readyState === WebSocket.OPEN) {\n                                client.send(JSON.stringify({ type: 'fileUpdate', fileName, content }));\n                            }\n                        });\n                    }\n                }, SAVE_DELAY);\n            }\n        });\n    } else {\n        vscode.window.showErrorMessage('Workspace path is not defined. Please open a folder in your workspace.');\n    }\n\n    context.subscriptions.push(startServerCommand, joinSessionCommand, stopSessionCommand, leaveSessionCommand);\n}\n\nfunction getFilesRecursively(dir: string): any[] {\n    let results: any[] = [];\n    const list = fs.readdirSync(dir);\n    list.forEach((file) => {\n        const filePath = path.join(dir, file);\n        const stat = fs.statSync(filePath);\n        if (stat && stat.isDirectory()) {\n            results = results.concat(getFilesRecursively(filePath));\n        } else {\n            results.push({ path: path.relative(workspacePath!, filePath), content: fs.readFileSync(filePath, 'utf8') });\n        }\n    });\n    return results;\n}\n\nexport function deactivate() {\n    if (wsServer) {\n        wsServer.close();\n    }\n    if (wsClient) {\n        wsClient.close();\n    }\n}\n","'use strict';\n\nconst WebSocket = require('./lib/websocket');\n\nWebSocket.createWebSocketStream = require('./lib/stream');\nWebSocket.Server = require('./lib/websocket-server');\nWebSocket.Receiver = require('./lib/receiver');\nWebSocket.Sender = require('./lib/sender');\n\nWebSocket.WebSocket = WebSocket;\nWebSocket.WebSocketServer = WebSocket.Server;\n\nmodule.exports = WebSocket;\n","'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) {\n    return new FastBuffer(target.buffer, target.byteOffset, offset);\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.length === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = new FastBuffer(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = new FastBuffer(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\nmodule.exports = {\n  concat,\n  mask: _mask,\n  toArrayBuffer,\n  toBuffer,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    module.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    module.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\nconst BINARY_TYPES = ['nodebuffer', 'arraybuffer', 'fragments'];\nconst hasBlob = typeof Blob !== 'undefined';\n\nif (hasBlob) BINARY_TYPES.push('blob');\n\nmodule.exports = {\n  BINARY_TYPES,\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  hasBlob,\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n","'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {(Function|Object)} handler The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, handler, options = {}) {\n    for (const listener of this.listeners(type)) {\n      if (\n        !options[kForOnEventAttribute] &&\n        listener[kListener] === handler &&\n        !listener[kForOnEventAttribute]\n      ) {\n        return;\n      }\n    }\n\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = handler;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {(Function|Object)} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n\n/**\n * Call an event listener\n *\n * @param {(Function|Object)} listener The listener to call\n * @param {*} thisArg The value to use as `this`` when calling the listener\n * @param {Event} event The event to pass to the listener\n * @private\n */\nfunction callListener(listener, thisArg, event) {\n  if (typeof listener === 'object' && listener.handleEvent) {\n    listener.handleEvent.call(listener, event);\n  } else {\n    listener.call(thisArg, event);\n  }\n}\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n","'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n","'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) {\n        data = new FastBuffer(data.buffer, data.byteOffset, data.length - 4);\n      }\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst FastBuffer = Buffer[Symbol.species];\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\nconst DEFER_EVENT = 6;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._allowSynchronousEvents =\n      options.allowSynchronousEvents !== undefined\n        ? options.allowSynchronousEvents\n        : true;\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._errored = false;\n    this._loop = false;\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = new FastBuffer(\n        buf.buffer,\n        buf.byteOffset + n,\n        buf.length - n\n      );\n\n      return new FastBuffer(buf.buffer, buf.byteOffset, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = new FastBuffer(\n          buf.buffer,\n          buf.byteOffset + n,\n          buf.length - n\n        );\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          this.getInfo(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          this.getPayloadLength16(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          this.getPayloadLength64(cb);\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          this.getData(cb);\n          break;\n        case INFLATING:\n        case DEFER_EVENT:\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    if (!this._errored) cb();\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getInfo(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      const error = this.createError(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n\n      cb(error);\n      return;\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      const error = this.createError(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (!this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        const error = this.createError(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (\n        this._payloadLength > 0x7d ||\n        (this._opcode === 0x08 && this._payloadLength === 1)\n      ) {\n        const error = this.createError(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    } else {\n      const error = this.createError(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        const error = this.createError(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n\n        cb(error);\n        return;\n      }\n    } else if (this._masked) {\n      const error = this.createError(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength16(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength64(cb) {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      const error = this.createError(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  haveLength(cb) {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        const error = this.createError(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) {\n      this.controlMessage(data, cb);\n      return;\n    }\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    this.dataMessage(cb);\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          const error = this.createError(\n            RangeError,\n            'Max payload size exceeded',\n            false,\n            1009,\n            'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._fragments.push(buf);\n      }\n\n      this.dataMessage(cb);\n      if (this._state === GET_INFO) this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  dataMessage(cb) {\n    if (!this._fin) {\n      this._state = GET_INFO;\n      return;\n    }\n\n    const messageLength = this._messageLength;\n    const fragments = this._fragments;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragmented = 0;\n    this._fragments = [];\n\n    if (this._opcode === 2) {\n      let data;\n\n      if (this._binaryType === 'nodebuffer') {\n        data = concat(fragments, messageLength);\n      } else if (this._binaryType === 'arraybuffer') {\n        data = toArrayBuffer(concat(fragments, messageLength));\n      } else if (this._binaryType === 'blob') {\n        data = new Blob(fragments);\n      } else {\n        data = fragments;\n      }\n\n      if (this._allowSynchronousEvents) {\n        this.emit('message', data, true);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', data, true);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    } else {\n      const buf = concat(fragments, messageLength);\n\n      if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n        const error = this.createError(\n          Error,\n          'invalid UTF-8 sequence',\n          true,\n          1007,\n          'WS_ERR_INVALID_UTF8'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (this._state === INFLATING || this._allowSynchronousEvents) {\n        this.emit('message', buf, false);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', buf, false);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data, cb) {\n    if (this._opcode === 0x08) {\n      if (data.length === 0) {\n        this._loop = false;\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          const error = this.createError(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n\n          cb(error);\n          return;\n        }\n\n        const buf = new FastBuffer(\n          data.buffer,\n          data.byteOffset + 2,\n          data.length - 2\n        );\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          const error = this.createError(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._loop = false;\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n\n      this._state = GET_INFO;\n      return;\n    }\n\n    if (this._allowSynchronousEvents) {\n      this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n      this._state = GET_INFO;\n    } else {\n      this._state = DEFER_EVENT;\n      setImmediate(() => {\n        this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n        this._state = GET_INFO;\n        this.startLoop(cb);\n      });\n    }\n  }\n\n  /**\n   * Builds an error object.\n   *\n   * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n   * @param {String} message The error message\n   * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n   *     `message`\n   * @param {Number} statusCode The status code\n   * @param {String} errorCode The exposed error code\n   * @return {(Error|RangeError)} The error\n   * @private\n   */\n  createError(ErrorCtor, message, prefix, statusCode, errorCode) {\n    this._loop = false;\n    this._errored = true;\n\n    const err = new ErrorCtor(\n      prefix ? `Invalid WebSocket frame: ${message}` : message\n    );\n\n    Error.captureStackTrace(err, this.createError);\n    err.code = errorCode;\n    err[kStatusCode] = statusCode;\n    return err;\n  }\n}\n\nmodule.exports = Receiver;\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex\" }] */\n\n'use strict';\n\nconst { Duplex } = require('stream');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER, kWebSocket, NOOP } = require('./constants');\nconst { isBlob, isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\nconst RANDOM_POOL_SIZE = 8 * 1024;\nlet randomPool;\nlet randomPoolPointer = RANDOM_POOL_SIZE;\n\nconst DEFAULT = 0;\nconst DEFLATING = 1;\nconst GET_BLOB_DATA = 2;\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {Duplex} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._queue = [];\n    this._state = DEFAULT;\n    this.onerror = NOOP;\n    this[kWebSocket] = undefined;\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        if (randomPoolPointer === RANDOM_POOL_SIZE) {\n          /* istanbul ignore else  */\n          if (randomPool === undefined) {\n            //\n            // This is lazily initialized because server-sent frames must not\n            // be masked so it may never be used.\n            //\n            randomPool = Buffer.alloc(RANDOM_POOL_SIZE);\n          }\n\n          randomFillSync(randomPool, 0, RANDOM_POOL_SIZE);\n          randomPoolPointer = 0;\n        }\n\n        mask[0] = randomPool[randomPoolPointer++];\n        mask[1] = randomPool[randomPoolPointer++];\n        mask[2] = randomPool[randomPoolPointer++];\n        mask[3] = randomPool[randomPoolPointer++];\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    const opts = {\n      [kByteLength]: byteLength,\n      fin: options.fin,\n      generateMask: this._generateMask,\n      mask: options.mask,\n      maskBuffer: this._maskBuffer,\n      opcode,\n      readOnly,\n      rsv1\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, this._compress, opts, cb]);\n      } else {\n        this.getBlobData(data, this._compress, opts, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n    } else {\n      this.dispatch(data, this._compress, opts, cb);\n    }\n  }\n\n  /**\n   * Gets the contents of a blob as binary data.\n   *\n   * @param {Blob} blob The blob\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     the data\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  getBlobData(blob, compress, options, cb) {\n    this._bufferedBytes += options[kByteLength];\n    this._state = GET_BLOB_DATA;\n\n    blob\n      .arrayBuffer()\n      .then((arrayBuffer) => {\n        if (this._socket.destroyed) {\n          const err = new Error(\n            'The socket was closed while the blob was being read'\n          );\n\n          //\n          // `callCallbacks` is called in the next tick to ensure that errors\n          // that might be thrown in the callbacks behave like errors thrown\n          // outside the promise chain.\n          //\n          process.nextTick(callCallbacks, this, err, cb);\n          return;\n        }\n\n        this._bufferedBytes -= options[kByteLength];\n        const data = toBuffer(arrayBuffer);\n\n        if (!compress) {\n          this._state = DEFAULT;\n          this.sendFrame(Sender.frame(data, options), cb);\n          this.dequeue();\n        } else {\n          this.dispatch(data, compress, options, cb);\n        }\n      })\n      .catch((err) => {\n        //\n        // `onError` is called in the next tick for the same reason that\n        // `callCallbacks` above is.\n        //\n        process.nextTick(onError, this, err, cb);\n      });\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._state = DEFLATING;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        callCallbacks(this, err, cb);\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._state = DEFAULT;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (this._state === DEFAULT && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Calls queued callbacks with an error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error to call the callbacks with\n * @param {Function} [cb] The first callback\n * @private\n */\nfunction callCallbacks(sender, err, cb) {\n  if (typeof cb === 'function') cb(err);\n\n  for (let i = 0; i < sender._queue.length; i++) {\n    const params = sender._queue[i];\n    const callback = params[params.length - 1];\n\n    if (typeof callback === 'function') callback(err);\n  }\n}\n\n/**\n * Handles a `Sender` error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error\n * @param {Function} [cb] The first pending callback\n * @private\n */\nfunction onError(sender, err, cb) {\n  callCallbacks(sender, err, cb);\n  sender.onerror(err);\n}\n","'use strict';\n\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let terminateOnDestroy = true;\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg, isBinary) {\n    const data =\n      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n\n    if (!duplex.push(data)) ws.pause();\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.isPaused) ws.resume();\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n","'use strict';\n\nconst { isUtf8 } = require('buffer');\n\nconst { hasBlob } = require('./constants');\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Determines whether a value is a `Blob`.\n *\n * @param {*} value The value to be tested\n * @return {Boolean} `true` if `value` is a `Blob`, else `false`\n * @private\n */\nfunction isBlob(value) {\n  return (\n    hasBlob &&\n    typeof value === 'object' &&\n    typeof value.arrayBuffer === 'function' &&\n    typeof value.type === 'string' &&\n    typeof value.stream === 'function' &&\n    (value[Symbol.toStringTag] === 'Blob' ||\n      value[Symbol.toStringTag] === 'File')\n  );\n}\n\nmodule.exports = {\n  isBlob,\n  isValidStatusCode,\n  isValidUTF8: _isValidUTF8,\n  tokenChars\n};\n\nif (isUtf8) {\n  module.exports.isValidUTF8 = function (buf) {\n    return buf.length < 24 ? _isValidUTF8(buf) : isUtf8(buf);\n  };\n} /* istanbul ignore else  */ else if (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    module.exports.isValidUTF8 = function (buf) {\n      return buf.length < 32 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst { Duplex } = require('stream');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n   *     automatically send a pong in response to a ping\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      allowSynchronousEvents: true,\n      autoPong: true,\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const upgrade = req.headers.upgrade;\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (key === undefined || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 8 && version !== 13) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null, undefined, this.options);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      allowSynchronousEvents: this.options.allowSynchronousEvents,\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message);\n  }\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex|Readable$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Duplex, Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst { isBlob } = require('./validation');\n\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._errorEmitted = false;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._autoPong = options.autoPong;\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * For historical reasons, the custom \"nodebuffer\" type is used by the default\n   * instead of \"blob\".\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Boolean} [options.allowSynchronousEvents=false] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      allowSynchronousEvents: options.allowSynchronousEvents,\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    const sender = new Sender(socket, this._extensions, options.generateMask);\n\n    this._receiver = receiver;\n    this._sender = sender;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    sender[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    sender.onerror = senderOnError;\n\n    //\n    // These methods may not be available if `socket` is just a `Duplex`.\n    //\n    if (socket.setTimeout) socket.setTimeout(0);\n    if (socket.setNoDelay) socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    setCloseTimer(this);\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether any\n *     of the `'message'`, `'ping'`, and `'pong'` events can be emitted multiple\n *     times in the same tick\n * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n *     automatically send a pong in response to a ping\n * @param {Function} [options.finishRequest] A function which can be used to\n *     customize the headers of each http request before it is sent\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    allowSynchronousEvents: true,\n    autoPong: true,\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  websocket._autoPong = opts.autoPong;\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n  }\n\n  if (parsedUrl.protocol === 'http:') {\n    parsedUrl.protocol = 'ws:';\n  } else if (parsedUrl.protocol === 'https:') {\n    parsedUrl.protocol = 'wss:';\n  }\n\n  websocket._url = parsedUrl.href;\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isIpcUrl = parsedUrl.protocol === 'ws+unix:';\n  let invalidUrlMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isIpcUrl) {\n    invalidUrlMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", ' +\n      '\"http:\", \"https\", or \"ws+unix:\"';\n  } else if (isIpcUrl && !parsedUrl.pathname) {\n    invalidUrlMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidUrlMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidUrlMessage) {\n    const err = new SyntaxError(invalidUrlMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection =\n    opts.createConnection || (isSecure ? tlsConnect : netConnect);\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    ...opts.headers,\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket'\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isIpcUrl) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalIpc = isIpcUrl;\n      websocket._originalSecure = isSecure;\n      websocket._originalHostOrSocketPath = isIpcUrl\n        ? opts.socketPath\n        : parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = isIpcUrl\n        ? websocket._originalIpc\n          ? opts.socketPath === websocket._originalHostOrSocketPath\n          : false\n        : websocket._originalIpc\n          ? false\n          : parsedUrl.host === websocket._originalHostOrSocketPath;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    const upgrade = res.headers.upgrade;\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      allowSynchronousEvents: opts.allowSynchronousEvents,\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  if (opts.finishRequest) {\n    opts.finishRequest(req, websocket);\n  } else {\n    req.end();\n  }\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  //\n  // The following assignment is practically useless and is done only for\n  // consistency.\n  //\n  websocket._errorEmitted = true;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = isBlob(data) ? data.size : toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    process.nextTick(cb, err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._autoPong) websocket.pong(data, !this._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The `Sender` error event handler.\n *\n * @param {Error} The error\n * @private\n */\nfunction senderOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket.readyState === WebSocket.CLOSED) return;\n  if (websocket.readyState === WebSocket.OPEN) {\n    websocket._readyState = WebSocket.CLOSING;\n    setCloseTimer(websocket);\n  }\n\n  //\n  // `socket.end()` is used instead of `socket.destroy()` to allow the other\n  // peer to finish sending queued data. There is no need to set a timer here\n  // because `CLOSING` means that it is already set or not needed.\n  //\n  this._socket.end();\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * Set a timer to destroy the underlying raw socket of a WebSocket.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @private\n */\nfunction setCloseTimer(websocket) {\n  websocket._closeTimer = setTimeout(\n    websocket._socket.destroy.bind(websocket._socket),\n    closeTimeout\n  );\n}\n\n/**\n * The listener of the socket `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the socket `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the socket `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the socket `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","module.exports = require(\"vscode\");","module.exports = require(\"buffer\");","module.exports = require(\"crypto\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","module.exports = require(\"tls\");","module.exports = require(\"url\");","module.exports = require(\"zlib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["context","startServerCommand","vscode","commands","registerCommand","isHosting","window","showInformationMessage","ip","wsServer","Server","host","port","on","socket","workspacePath","files","getFilesRecursively","send","JSON","stringify","type","message","data","parse","toString","filePath","path","join","fileName","fs","readFileSync","content","writeFileSync","joinSessionCommand","async","showInputBox","prompt","wsClient","forEach","file","mkdirSync","dirname","recursive","showErrorMessage","error","stopSessionCommand","close","leaveSessionCommand","workspace","workspaceFolders","uri","fsPath","onDidChangeTextDocument","e","document","scheme","relative","getText","saveTimeout","clearTimeout","setTimeout","clients","client","readyState","OPEN","SAVE_DELAY","subscriptions","push","dir","results","readdirSync","stat","statSync","isDirectory","concat","WebSocket","createWebSocketStream","Receiver","Sender","WebSocketServer","module","exports","EMPTY_BUFFER","FastBuffer","Buffer","Symbol","species","_mask","source","mask","output","offset","length","i","_unmask","buffer","list","totalLength","target","allocUnsafe","buf","set","byteOffset","toArrayBuffer","byteLength","slice","toBuffer","readOnly","isBuffer","ArrayBuffer","isView","from","unmask","process","env","WS_NO_BUFFER_UTIL","bufferUtil","BINARY_TYPES","hasBlob","Blob","alloc","GUID","kForOnEventAttribute","kListener","kStatusCode","kWebSocket","NOOP","kCode","kData","kError","kMessage","kReason","kTarget","kType","kWasClean","Event","constructor","this","Object","defineProperty","prototype","enumerable","CloseEvent","options","super","undefined","code","reason","wasClean","ErrorEvent","MessageEvent","EventTarget","addEventListener","handler","listener","listeners","wrapper","isBinary","event","callListener","_closeFrameReceived","_closeFrameSent","once","removeEventListener","removeListener","thisArg","handleEvent","call","tokenChars","dest","name","elem","format","extensions","keys","map","extension","configurations","Array","isArray","params","k","values","v","header","offers","create","extensionName","paramName","mustUnescape","isEscaping","inQuotes","start","end","charCodeAt","SyntaxError","value","replace","token","kDone","kRun","concurrency","pending","Infinity","jobs","add","job","shift","zlib","Limiter","TRAILER","kPerMessageDeflate","kTotalLength","kCallback","kBuffers","zlibLimiter","deflateOnData","chunk","inflateOnData","_maxPayload","RangeError","reset","inflateOnError","err","_inflate","isServer","maxPayload","_options","_threshold","threshold","_isServer","_deflate","concurrencyLimit","offer","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","accept","normalizeParams","acceptAsServer","acceptAsClient","cleanup","callback","Error","opts","accepted","find","response","key","num","Number","isInteger","TypeError","decompress","fin","done","_decompress","result","compress","_compress","endpoint","windowBits","Z_DEFAULT_WINDOWBITS","createInflateRaw","zlibInflateOptions","write","flush","_readableState","endEmitted","createDeflateRaw","zlibDeflateOptions","Z_SYNC_FLUSH","Writable","PerMessageDeflate","isValidStatusCode","isValidUTF8","_allowSynchronousEvents","allowSynchronousEvents","_binaryType","binaryType","_extensions","_skipUTF8Validation","skipUTF8Validation","_bufferedBytes","_buffers","_compressed","_payloadLength","_fragmented","_masked","_fin","_opcode","_totalPayloadLength","_messageLength","_fragments","_errored","_loop","_state","_write","encoding","cb","startLoop","consume","n","dst","Uint8Array","getInfo","getPayloadLength16","getPayloadLength64","getMask","getData","createError","compressed","haveLength","readUInt16BE","readUInt32BE","Math","pow","controlMessage","dataMessage","messageLength","fragments","emit","setImmediate","ErrorCtor","prefix","statusCode","errorCode","captureStackTrace","Duplex","randomFillSync","isBlob","applyMask","kByteLength","maskBuffer","RANDOM_POOL_SIZE","randomPool","randomPoolPointer","generateMask","_generateMask","_maskBuffer","_socket","_firstFragment","_queue","onerror","frame","dataLength","merge","skipMasking","payloadLength","opcode","rsv1","writeUInt16BE","writeUIntBE","enqueue","dispatch","sendFrame","ping","size","getBlobData","pong","perMessageDeflate","binary","blob","arrayBuffer","then","destroyed","nextTick","callCallbacks","dequeue","catch","onError","_","Reflect","apply","cork","uncork","sender","emitClose","stream","duplexOnEnd","_writableState","finished","destroy","duplexOnError","listenerCount","ws","terminateOnDestroy","duplex","autoDestroy","objectMode","writableObjectMode","msg","pause","_destroy","CLOSED","called","terminate","_final","CONNECTING","_read","isPaused","resume","protocols","Set","protocol","has","isUtf8","_isValidUTF8","len","toStringTag","WS_NO_UTF_8_VALIDATE","EventEmitter","http","createHash","subprotocol","keyRegex","server","socketOnError","abortHandshake","headers","STATUS_CODES","Connection","h","abortHandshakeOrEmitwsClientError","req","autoPong","handleProtocols","clientTracking","verifyClient","noServer","backlog","_server","createServer","res","body","writeHead","listen","emitConnection","bind","_removeListeners","addListeners","listening","upgrade","head","handleUpgrade","_shouldEmitClose","address","shouldHandle","index","url","indexOf","version","method","toLowerCase","test","secWebSocketProtocol","secWebSocketExtensions","info","origin","secure","authorized","encrypted","verified","completeUpgrade","readable","writable","update","digest","next","_protocol","setSocket","delete","https","net","tls","randomBytes","Readable","URL","kAborted","protocolVersions","readyStates","subprotocolRegex","_closeCode","_closeMessage","_closeTimer","_errorEmitted","_paused","_readyState","_receiver","_sender","_bufferedAmount","_redirects","initAsClient","_autoPong","includes","bufferedAmount","onclose","onopen","onmessage","_url","receiver","receiverOnConclude","receiverOnDrain","receiverOnError","receiverOnMessage","receiverOnPing","receiverOnPong","senderOnError","setNoDelay","unshift","socketOnClose","socketOnData","socketOnEnd","removeAllListeners","CLOSING","errorEmitted","setCloseTimer","_req","sendAfterClose","needDrain","websocket","protocolVersion","followRedirects","maxRedirects","socketPath","hostname","timeout","parsedUrl","href","isSecure","isIpcUrl","invalidUrlMessage","pathname","hash","emitErrorAndClose","defaultPort","request","protocolSet","createConnection","tlsConnect","netConnect","startsWith","Upgrade","search","handshakeTimeout","Origin","username","password","auth","parts","split","_originalIpc","_originalSecure","_originalHostOrSocketPath","entries","isSameHost","authorization","cookie","location","addr","abort","serverProt","protError","extensionNames","finishRequest","connect","servername","isIP","setHeader","receiverOnFinish","read","property","get","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}